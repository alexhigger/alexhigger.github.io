<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-21T14:29:18.965Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>alexhigger</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编译原理----预测分析程序</title>
    <link href="http://yoursite.com/2020/06/17/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/06/17/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-06-16T16:00:00.000Z</published>
    <updated>2020-06-21T14:29:18.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><blockquote><p>已知LL分析表，构造出文法G的预测分析程序，要求程序在界面显示输出的所有匹配过程。</p></blockquote><ul><li><p>语法分析的范畴，回顾知识<br>  前提：词法分析：将字符串中的各个元素扫描识别成符号串<br>  任务：<br>  按照规定文法的产生式 ,识别词法分析得到符号串是否为一一个合式句子(程序)</p></li><li><p>语法分析的方法<br>自上而下（从识别符号出发）  自下而上（从输入字符串出发）<br>  从文法的开始符号出发,反复使用各种产生式,寻找”匹配”的推导<br>  推导:根据文法的产生式规则,把串中出现的产生式的左部符号替换成右部<br>  从树的根开始,构造语法树  </p><ul><li>自上而下面临的问题<br>  回溯问题        （提取公共左因子）<br>  文法左递归   （左递归边右递归）</li></ul></li><li><p>给定文法是没有这两个问题的  </p></li><li><p>什么是ll文法<br>从左扫描+从左推倒</p></li><li><p>ll分析方法—-对ll文法的分析分析方法</p><ul><li>自上而下，</li><li>无左递归的分析方法  <ul><li>递归下降分析技术、预测分析技术<br>递归下降程序是一种对于LL(1)分析法的实现技术，采用这种技术的前提是有一个允许递归的程序设计语言本次实验设计没有采用递归下降分析程序即没有递归机制，而是采用非递归的预测分析程序 栈</li></ul></li></ul></li></ul><p>LL分析表：ll文法+ll分析（预测分析技术）</p><p>预测分析程序如下 </p><p>文法如下：</p><p>E→TE’</p><p>E’ →+TE’|ε</p><p>T→FT’</p><p>T’ →*FT’|ε</p><p> F→(E)|i</p><h2 id="总控程序"><a href="#总控程序" class="headerlink" title="总控程序"></a>总控程序</h2><p>根据当前栈顶符号X和输入符号a ,执行下列三动作:</p><ol><li>若X=a= ‘#’ ,则宣布分析成功,停止分析。</li><li>若X=a≠’#’ ,则把X从STACK栈顶逐出,让a指向下一个输入符号。此终结符匹配</li><li>若X是一个非终结符,则查看分析表M。<ul><li>若M[X , a]中存放着关于X的一个产生式,把X逐出STACK栈顶,把产生式的右部符号串按反序一一推进STACK栈(若右部符号为ε , 则意味不推什么东西进栈)。</li><li>若M[X , a]中存放着，”出错标志” ,则调用出错诊察程序ERROR</li></ul></li></ol><h2 id="分析表"><a href="#分析表" class="headerlink" title="分析表"></a>分析表</h2><p>是一个二维矩阵，负责指导分析程序如何对栈顶符号进行操作，特别是面临栈顶元素是非终结符的时候，预测选择此非终结符的候选进行扩展</p><h2 id="分析栈"><a href="#分析栈" class="headerlink" title="分析栈"></a>分析栈</h2><p>用于存放需要匹配的文法符号，主要有获取栈顶元素、字符进栈、出栈、打印栈里面的元素等功能</p><h1 id="具体代码如下"><a href="#具体代码如下" class="headerlink" title="具体代码如下"></a>具体代码如下</h1><h2 id="分析栈-1"><a href="#分析栈-1" class="headerlink" title="分析栈"></a>分析栈</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分析栈</span></span><br><span class="line"><span class="comment"> * 获取栈顶元素、字符进栈、出栈、打印栈里面的元素等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> s[];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> top;<span class="comment">//表示栈顶</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> base;<span class="comment">//栈底</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX = <span class="number">200</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 初始化栈&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Stack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        initStack();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        s = <span class="keyword">new</span> <span class="keyword">char</span>[MAX];</span><br><span class="line">        base = <span class="number">0</span>;</span><br><span class="line">        top = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(top == base) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: getTop&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 获取栈顶元素&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回栈顶元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">getTop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s[top-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: push&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 进栈方法&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 进栈的字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = str.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            s[top++] = str.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: clear&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 清空栈&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        top = base;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: pop&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 出栈&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 栈顶元素出栈并返回出栈的元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s[--top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Title: size&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Description: 返回栈中元素个数&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 栈中元素个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> top;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印栈里面的元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer tempStack = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; top; i++) &#123;</span><br><span class="line">            tempStack.append(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tempStack.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主控程序和分析表（已给出）"><a href="#主控程序和分析表（已给出）" class="headerlink" title="主控程序和分析表（已给出）"></a>主控程序和分析表（已给出）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 已知LL分析表，构造出文法G的预测分析程序，要求程序在界面显示输出的所有匹配过程。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GrammarAnalyze</span> </span>&#123;</span><br><span class="line">    <span class="comment">//分析表将E'替换为e,T'替换t</span></span><br><span class="line">    <span class="keyword">private</span> String tab[][] = &#123;</span><br><span class="line">            <span class="comment">//分析表</span></span><br><span class="line">            &#123; <span class="string">"$"</span>, <span class="string">"i"</span>,  <span class="string">"+"</span>,   <span class="string">"*"</span>,  <span class="string">"("</span>,   <span class="string">")"</span>, <span class="string">"#"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"E"</span>, <span class="string">"Te"</span>, <span class="string">"$"</span>,   <span class="string">"$"</span>,  <span class="string">"Te"</span>, <span class="string">"$"</span>,  <span class="string">"$"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"e"</span>, <span class="string">"$"</span>, <span class="string">"+Te"</span>, <span class="string">"$"</span>,   <span class="string">"$"</span>,  <span class="string">"ε"</span>,  <span class="string">"ε"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"T"</span>, <span class="string">"Ft"</span>, <span class="string">"$"</span>,   <span class="string">"$"</span>,  <span class="string">"Ft"</span>,<span class="string">"$"</span>,  <span class="string">"$"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"t"</span>, <span class="string">"$"</span>,  <span class="string">"ε"</span>,   <span class="string">"*Ft"</span>, <span class="string">"$"</span>, <span class="string">"ε"</span>,  <span class="string">"ε"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"F"</span>,  <span class="string">"i"</span>,  <span class="string">"$"</span>,   <span class="string">"$"</span>,  <span class="string">"(E)"</span>,<span class="string">"$"</span>, <span class="string">"$"</span> &#125; &#125;;</span><br><span class="line">    <span class="keyword">private</span> String input;  <span class="comment">//input中存放输入的表达式</span></span><br><span class="line">    <span class="keyword">private</span> StringBuffer tempBuffer;    <span class="comment">//存放要输出的字符串</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> target, row, col, step; <span class="comment">//指针，预测表中的行，列，当前步骤</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> symbol;</span><br><span class="line">    <span class="keyword">private</span> Stack stack;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GrammarAnalyze</span><span class="params">()</span></span>&#123;</span><br><span class="line">        stack = <span class="keyword">new</span> Stack();</span><br><span class="line">        tempBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        symbol=<span class="keyword">true</span>;</span><br><span class="line">        input=<span class="string">""</span>;</span><br><span class="line">        stack.clear();</span><br><span class="line">        stack.push(<span class="string">"#"</span>);</span><br><span class="line">        row=<span class="number">1</span>;</span><br><span class="line">        target=<span class="number">0</span>;</span><br><span class="line">        step=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">column</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;  <span class="comment">//判断预测表中的列</span></span><br><span class="line">        <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'i'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'#'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">line</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123; <span class="comment">//判定预测表中的行</span></span><br><span class="line">        <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'T'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'t'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'F'</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        tempBuffer.append(String.format(<span class="string">"%-7d%-14s%-20s%-20s\r\n"</span>,</span><br><span class="line">                step, filter(stack.toString()), filter(input.substring(target)), filter(str)));</span><br><span class="line">        step++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总控程序根据当前栈顶符号X和输入符号a ,执行下列三动作:</span></span><br><span class="line"><span class="comment">     * 1.若X=a= #'' ,则宣布分析成功,停止分析。（栈内无要匹配的符号，符号串到末尾了）</span></span><br><span class="line"><span class="comment">     * 2.若X=a≠'#' ,说明是终结符，此终结符匹配,则把X从STACK栈顶逐出,让a指向下一个输入符号。</span></span><br><span class="line"><span class="comment">     * 3.若X≠a 说明X是一个非终结符,则查看分析表M。</span></span><br><span class="line"><span class="comment">     *       3.1若M[X , a]中存放着关于X的一个产生式,把X逐出STACK栈顶,把产生式的右部符号串按反序一一推进STACK栈(若右部符号为ε , 则意味不推什么东西进栈)。</span></span><br><span class="line"><span class="comment">     *       3.2若M[X , a]中存放着"出错标志$” ,则给出报错</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">analyse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stack.push(tab[row][<span class="number">0</span>]);   <span class="comment">//预测表中的第一个元素‘E’</span></span><br><span class="line">        show(<span class="string">"初始化"</span>);</span><br><span class="line">        String tmp;</span><br><span class="line">        <span class="keyword">char</span> top;   <span class="comment">//栈顶元素</span></span><br><span class="line">        <span class="keyword">while</span> (!(input.charAt(target) == <span class="string">'#'</span> &amp;&amp; stack.getTop() == <span class="string">'#'</span>)) &#123;</span><br><span class="line">            top = stack.getTop();<span class="comment">//获取栈顶的元素</span></span><br><span class="line">            <span class="keyword">if</span> (input.charAt(target) == top) &#123; <span class="comment">//与栈顶元素比较</span></span><br><span class="line">                stack.pop();</span><br><span class="line">                target++;</span><br><span class="line">                show(<span class="string">""</span> + top + <span class="string">"匹配"</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断target位置的终结符所在预测表的列位置</span></span><br><span class="line">            col = column(input.charAt(target));</span><br><span class="line">            <span class="keyword">if</span> (col == -<span class="number">1</span>) &#123;</span><br><span class="line">                symbol = <span class="keyword">false</span>;</span><br><span class="line">                show(<span class="string">"未定义的字符"</span>);</span><br><span class="line">                target++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断栈顶位置所在预测表的行位置</span></span><br><span class="line">            row = line(top);</span><br><span class="line">            <span class="keyword">if</span> (row == -<span class="number">1</span>) &#123;</span><br><span class="line">                symbol = <span class="keyword">false</span>;</span><br><span class="line">                show(<span class="string">"出错"</span>);</span><br><span class="line">                stack.pop();</span><br><span class="line">                <span class="keyword">if</span> (input.charAt(target) != <span class="string">'#'</span>) &#123;</span><br><span class="line">                    target++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = tab[row][col];</span><br><span class="line">            <span class="keyword">if</span> (tmp.charAt(<span class="number">0</span>) == <span class="string">'$'</span>) &#123;</span><br><span class="line">                symbol = <span class="keyword">false</span>;</span><br><span class="line">                show(<span class="string">"出错"</span>);</span><br><span class="line">                stack.pop();</span><br><span class="line">                <span class="keyword">if</span> (input.charAt(target) != <span class="string">'#'</span>) &#123;</span><br><span class="line">                    target++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tmp.charAt(<span class="number">0</span>) == <span class="string">'ε'</span>) &#123;</span><br><span class="line">                stack.pop();</span><br><span class="line">                show(<span class="string">""</span> + top + <span class="string">"-&gt;"</span> + <span class="string">'ε'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stack.pop();</span><br><span class="line">                stack.push(tmp);</span><br><span class="line">                show(<span class="string">""</span> + top + <span class="string">"-&gt;"</span> + tmp);<span class="comment">//哪个产生式</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//过滤方法将打印的字符串中e和t替换为E'和T'</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filter</span><span class="params">(String src)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(src.contains(<span class="string">"e"</span>) || src.contains(<span class="string">"t"</span>)) &#123;</span><br><span class="line">            StringBuffer result = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">char</span> item;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; src.length(); i++) &#123;</span><br><span class="line">                item = src.charAt(i);</span><br><span class="line">                <span class="keyword">if</span>(item == <span class="string">'e'</span>) &#123;</span><br><span class="line">                    result.append(<span class="string">"E'"</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(item == <span class="string">'t'</span>) &#123;</span><br><span class="line">                    result.append(<span class="string">"T'"</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result.append(item);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result.toString();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> src;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">work</span><span class="params">(String inputExpression)</span> </span>&#123;</span><br><span class="line">        input = inputExpression + <span class="string">'#'</span>;</span><br><span class="line">        symbol = <span class="keyword">true</span>;</span><br><span class="line">        tempBuffer.append(String.format(<span class="string">"%-8s%-10s%-15s%-20s\r\n"</span>,</span><br><span class="line">                <span class="string">"步骤"</span>,<span class="string">"分析栈"</span>,<span class="string">"剩余输入串"</span>,<span class="string">"所用产生式"</span>));</span><br><span class="line">        analyse();</span><br><span class="line">        <span class="keyword">if</span> (symbol) &#123;</span><br><span class="line">            tempBuffer.append(<span class="string">"\r是正确的符号串\r"</span>);</span><br><span class="line">            <span class="keyword">return</span> tempBuffer.toString();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tempBuffer.append(<span class="string">"\r不是正确的符号串\r"</span>);</span><br><span class="line">            <span class="keyword">return</span> tempBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="main函数"><a href="#main函数" class="headerlink" title="main函数"></a>main函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"已知文法如下：              文法FIRST集              文法FALLOW集 \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"E→TE'                     FIRST(E)=&#123;(,i&#125;            FOLLOW(E)=&#123;),#&#125;\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"T→FT'                     FIRST(E’)=&#123;+, ε&#125;         FOLLOW(E’)=&#123;),#&#125; \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"T’ →*FT'|ε               FIRST(T)=&#123;(,i&#125;            FOLLOW(T)=&#123;+,),#&#125;\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"F→(E)|i                   FIRST(T’)=&#123; *, ε&#125;        FOLLOW(T’)=&#123;+,),#&#125;\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"                          FIRST(F)=&#123;(,i&#125;            FOLLOW(F)=&#123;*,+,),#&#125;\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"-----------预测分析表如下---------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"        i         +         *        (         )        # \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"E     E-&gt;TE’                       E-&gt;TE’                 \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"E’              E’-&gt;+TE’                     E’-&gt;ε   E’-&gt;ε\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"T     T-&gt;FT’                       T-&gt;FT’                   \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"T’              T’-&gt;ε     T’-&gt;*FT’          T’-&gt;ε   T’-&gt;ε            \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"F     F-&gt;i                         F-&gt;(E)                \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(flag) &#123;</span><br><span class="line">            GrammarAnalyze analyze = <span class="keyword">new</span> GrammarAnalyze();</span><br><span class="line">            Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            System.out.println(<span class="string">"请输入你要翻译的表达式：（！！！提示：本程序只能对由i + * ( ) 构成的字符串进行分析）"</span>);</span><br><span class="line">            String inputExpression = scan.nextLine();</span><br><span class="line">            String srcdata = inputExpression.trim();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">""</span>.equals(srcdata) || srcdata == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"输入表达式为空，请重新输入"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                String result = analyze.work(srcdata);</span><br><span class="line">                System.out.println(result);</span><br><span class="line">                System.out.println(<span class="string">"是否继续？y/n"</span>);</span><br><span class="line">                String yn = scan.nextLine();</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">"no"</span>.equals(yn) || <span class="string">"n"</span>.equals(yn)) &#123;</span><br><span class="line">                    flag = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;任务&quot;&gt;&lt;a href=&quot;#任务&quot; class=&quot;headerlink&quot; title=&quot;任务&quot;&gt;&lt;/a&gt;任务&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;已知LL分析表，构造出文法G的预测分析程序，要求程序在界面显示输出的所有匹配过程。&lt;/p&gt;
&lt;/blockquot
      
    
    </summary>
    
    
    
      <category term="编译原理，课程设计" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%EF%BC%8C%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-plus一些知识点</title>
    <link href="http://yoursite.com/2020/06/01/MyBatisPlus/"/>
    <id>http://yoursite.com/2020/06/01/MyBatisPlus/</id>
    <published>2020-05-31T16:00:00.000Z</published>
    <updated>2020-06-21T14:34:35.867Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MyBatis-Plus"><a href="#MyBatis-Plus" class="headerlink" title="MyBatis Plus"></a>MyBatis Plus</h3><p>国产的开源框架，基于 MyBatis</p><p>核心功能就是简化 MyBatis 的开发，提高效率。</p><h3 id="MyBatis-Plus-快速上手"><a href="#MyBatis-Plus-快速上手" class="headerlink" title="MyBatis Plus 快速上手"></a>MyBatis Plus 快速上手</h3><p>Spring Boot(2.3.0) + MyBatis Plus（国产的开源框架，并没有接入到 Spring 官方孵化器中）</p><p>1、创建 Maven 工程</p><p>![image-20200516201427232](/Users/southwind/Library/Application Support/typora-user-images/image-20200516201427232.png)</p><p>2、pom.xml 引入 MyBatis Plus 的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、创建 Mapper 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p>6、启动类需要添加 @MapperScan(“mapper所在的包”)，否则无法加载 Mppaer bean。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.southwind.mybatisplus.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisplusApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        mapper.selectList(<span class="keyword">null</span>).forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3><blockquote><p>@TableName</p></blockquote><p>映射数据库的表名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(value = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@TableId</p></blockquote><p>设置主键映射，value 映射主键字段名</p><p>type 设置主键类型，主键的生成策略，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AUTO(<span class="number">0</span>),</span><br><span class="line">NONE(<span class="number">1</span>),</span><br><span class="line">INPUT(<span class="number">2</span>),</span><br><span class="line">ASSIGN_ID(<span class="number">3</span>),</span><br><span class="line">ASSIGN_UUID(<span class="number">4</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">ID_WORKER(<span class="number">3</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">ID_WORKER_STR(<span class="number">3</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">UUID(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>AUTO</td><td>数据库自增</td></tr><tr><td>NONE</td><td>MP set 主键，雪花算法实现</td></tr><tr><td>INPUT</td><td>需要开发者手动赋值</td></tr><tr><td>ASSIGN_ID</td><td>MP 分配 ID，Long、Integer、String</td></tr><tr><td>ASSIGN_UUID</td><td>分配 UUID，Strinig</td></tr></tbody></table><p>INPUT 如果开发者没有手动赋值，则数据库通过自增的方式给主键赋值，如果开发者手动赋值，则存入该值。</p><p>AUTO 默认就是数据库自增，开发者无需赋值。</p><p>ASSIGN_ID MP 自动赋值，雪花算法。</p><p>ASSIGN_UUID 主键的数据类型必须是 String，自动生成 UUID 进行赋值</p><blockquote><p>@TableField</p></blockquote><p>映射非主键字段，value 映射字段名</p><p>exist 表示是否为数据库字段 false，如果实体类中的成员变量在数据库中没有对应的字段，则可以使用 exist，VO、DTO</p><p>select 表示是否查询该字段</p><p>fill 表示是否自动填充，将对象存入数据库的时候，由 MyBatis Plus 自动给某些字段赋值，create_time、update_time</p><p>1、给表添加 create_time、update_time 字段</p><p>2、实体类中添加成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(value = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@TableField</span>(value = <span class="string">"name"</span>,select = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、创建自动填充处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"createTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@Version</p></blockquote><p>标记乐观锁，通过 version 字段来保证数据的安全性，当修改数据的时候，会以 version 作为条件，当条件成立的时候才会修改成功。</p><p>version = 2</p><p>线程 1:update … set version = 2  where version = 1</p><p>线程2 ：update … set version = 2 where version = 1</p><p>1、数据库表添加 version 字段，默认值为 1</p><p>2、实体类添加 version 成员变量，并且添加 @Version </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(value = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@TableField</span>(value = <span class="string">"name"</span>,select = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、注册配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@EnumValue</p></blockquote><p>1、通用枚举类注解，将数据库字段映射成实体类的枚举类型成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> StatusEnum &#123;</span><br><span class="line">    WORK(<span class="number">1</span>,<span class="string">"上班"</span>),</span><br><span class="line">    REST(<span class="number">0</span>,<span class="string">"休息"</span>);</span><br><span class="line"></span><br><span class="line">    StatusEnum(Integer code, String msg) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EnumValue</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.enums.StatusEnum;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(value = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@TableField</span>(value = <span class="string">"name"</span>,select = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">    <span class="keyword">private</span> StatusEnum status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type-enums-package:</span> </span><br><span class="line">  <span class="string">com.southwind.mybatisplus.enums</span></span><br></pre></td></tr></table></figure><p>2、实现接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.enums.IEnum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> AgeEnum implements IEnum&lt;Integer&gt; &#123;</span><br><span class="line">    ONE(<span class="number">1</span>,<span class="string">"一岁"</span>),</span><br><span class="line">    TWO(<span class="number">2</span>,<span class="string">"两岁"</span>),</span><br><span class="line">    THREE(<span class="number">3</span>,<span class="string">"三岁"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    AgeEnum(Integer code, String msg) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@TableLogic</p></blockquote><p>映射逻辑删除</p><p>1、数据表添加 deleted 字段</p><p>2、实体类添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.enums.AgeEnum;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.enums.StatusEnum;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(value = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@TableField</span>(value = <span class="string">"name"</span>,select = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> AgeEnum age;</span><br><span class="line">    <span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">    <span class="meta">@TableField</span>(value = <span class="string">"status"</span>)</span><br><span class="line">    <span class="keyword">private</span> StatusEnum statusEnum;</span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer deleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、application.yml 添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global-config:</span></span><br><span class="line">  <span class="attr">db-config:</span></span><br><span class="line">    <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mapper.selectList(null);</span></span><br><span class="line">QueryWrapper wrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map.put("name","小红");</span></span><br><span class="line"><span class="comment">//        map.put("age",3);</span></span><br><span class="line"><span class="comment">//        wrapper.allEq(map);</span></span><br><span class="line"><span class="comment">//        wrapper.gt("age",2);</span></span><br><span class="line"><span class="comment">//        wrapper.ne("name","小红");</span></span><br><span class="line"><span class="comment">//        wrapper.ge("age",2);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//like '%小'</span></span><br><span class="line"><span class="comment">//        wrapper.likeLeft("name","小");</span></span><br><span class="line"><span class="comment">//like '小%'</span></span><br><span class="line"><span class="comment">//        wrapper.likeRight("name","小");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//inSQL</span></span><br><span class="line"><span class="comment">//        wrapper.inSql("id","select id from user where id &lt; 10");</span></span><br><span class="line"><span class="comment">//        wrapper.inSql("age","select age from user where age &gt; 3");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        wrapper.orderByDesc("age");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        wrapper.orderByAsc("age");</span></span><br><span class="line"><span class="comment">//        wrapper.having("id &gt; 8");</span></span><br><span class="line"></span><br><span class="line">mapper.selectList(wrapper).forEach(System.out::println);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        System.out.println(mapper.selectById(7));</span></span><br><span class="line"><span class="comment">//        mapper.selectBatchIds(Arrays.asList(7,8,9)).forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Map 只能做等值判断，逻辑判断需要使用 Wrapper 来处理</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map.put("id",7);</span></span><br><span class="line"><span class="comment">//        mapper.selectByMap(map).forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line">QueryWrapper wrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line">wrapper.eq(<span class="string">"id"</span>,<span class="number">7</span>);</span><br><span class="line"><span class="comment">////        System.out.println(mapper.selectCount(wrapper));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        //将查询的结果集封装到Map中</span></span><br><span class="line"><span class="comment">//        mapper.selectMaps(wrapper).forEach(System.out::println);</span></span><br><span class="line"><span class="comment">//        System.out.println("-------------------");</span></span><br><span class="line"><span class="comment">//        mapper.selectList(wrapper).forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//分页查询</span></span><br><span class="line"><span class="comment">//        Page&lt;User&gt; page = new Page&lt;&gt;(2,2);</span></span><br><span class="line"><span class="comment">//        Page&lt;User&gt; result = mapper.selectPage(page,null);</span></span><br><span class="line"><span class="comment">//        System.out.println(result.getSize());</span></span><br><span class="line"><span class="comment">//        System.out.println(result.getTotal());</span></span><br><span class="line"><span class="comment">//        result.getRecords().forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        Page&lt;Map&lt;String,Object&gt;&gt; page = new Page&lt;&gt;(1,2);</span></span><br><span class="line"><span class="comment">//        mapper.selectMapsPage(page,null).getRecords().forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        mapper.selectObjs(null).forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(mapper.selectOne(wrapper));</span><br></pre></td></tr></table></figure><h3 id="自定义-SQL（多表关联查询）"><a href="#自定义-SQL（多表关联查询）" class="headerlink" title="自定义 SQL（多表关联查询）"></a>自定义 SQL（多表关联查询）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductVO</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer category;</span><br><span class="line">    <span class="keyword">private</span> Integer count;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.entity.ProductVO;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select p.*,u.name userName from product p,user u where p.user_id = u.id and u.id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">List&lt;ProductVO&gt; <span class="title">productList</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setTitle(<span class="string">"小明"</span>);</span><br><span class="line">user.setAge(<span class="number">22</span>);</span><br><span class="line">mapper.insert(user);</span><br><span class="line">System.out.println(user);</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mapper.deleteById(1);</span></span><br><span class="line"><span class="comment">//        mapper.deleteBatchIds(Arrays.asList(7,8));</span></span><br><span class="line"><span class="comment">//        QueryWrapper wrapper = new QueryWrapper();</span></span><br><span class="line"><span class="comment">//        wrapper.eq("age",14);</span></span><br><span class="line"><span class="comment">//        mapper.delete(wrapper);</span></span><br><span class="line"></span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"id"</span>,<span class="number">10</span>);</span><br><span class="line">mapper.deleteByMap(map);</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;        &#x2F;&#x2F;update ... version &#x3D; 3 where version &#x3D; 2</span><br><span class="line">&#x2F;&#x2F;        User user &#x3D; mapper.selectById(7);</span><br><span class="line">&#x2F;&#x2F;        user.setTitle(&quot;一号&quot;);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;        &#x2F;&#x2F;update ... version &#x3D; 3 where version &#x3D; 2</span><br><span class="line">&#x2F;&#x2F;        User user1 &#x3D; mapper.selectById(7);</span><br><span class="line">&#x2F;&#x2F;        user1.setTitle(&quot;二号&quot;);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;        mapper.updateById(user1);</span><br><span class="line">&#x2F;&#x2F;        mapper.updateById(user);</span><br><span class="line"></span><br><span class="line">User user &#x3D; mapper.selectById(1);</span><br><span class="line">user.setTitle(&quot;小红&quot;);</span><br><span class="line">QueryWrapper wrapper &#x3D; new QueryWrapper();</span><br><span class="line">wrapper.eq(&quot;age&quot;,22);</span><br><span class="line">mapper.update(user,wrapper);</span><br></pre></td></tr></table></figure><h3 id="MyBatisPlus-自动生成"><a href="#MyBatisPlus-自动生成" class="headerlink" title="MyBatisPlus 自动生成"></a>MyBatisPlus 自动生成</h3><p>根据数据表自动生成实体类、Mapper、Service、ServiceImpl、Controller</p><p>1、pom.xml 导入 MyBatis Plus Generator</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Velocity（默认）、Freemarker、Beetl</p><p>2、启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建generator对象</span></span><br><span class="line">        AutoGenerator autoGenerator = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        <span class="comment">//数据源</span></span><br><span class="line">        DataSourceConfig dataSourceConfig = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dataSourceConfig.setDbType(DbType.MYSQL);</span><br><span class="line">        dataSourceConfig.setUrl(<span class="string">"jdbc:mysql://ip:3306/db?useUnicode=true&amp;characterEncoding=UTF-8"</span>);</span><br><span class="line">        dataSourceConfig.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dataSourceConfig.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        dataSourceConfig.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        autoGenerator.setDataSource(dataSourceConfig);</span><br><span class="line">        <span class="comment">//全局配置</span></span><br><span class="line">        GlobalConfig globalConfig = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        globalConfig.setOutputDir(System.getProperty(<span class="string">"user.dir"</span>)+<span class="string">"/src/main/java"</span>);</span><br><span class="line">        globalConfig.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        globalConfig.setAuthor(<span class="string">"southwind"</span>);</span><br><span class="line">        globalConfig.setServiceName(<span class="string">"%sService"</span>);</span><br><span class="line">        autoGenerator.setGlobalConfig(globalConfig);</span><br><span class="line">        <span class="comment">//包信息</span></span><br><span class="line">        PackageConfig packageConfig = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        packageConfig.setParent(<span class="string">"com.southwind.mybatisplus"</span>);</span><br><span class="line">        packageConfig.setModuleName(<span class="string">"generator"</span>);</span><br><span class="line">        packageConfig.setController(<span class="string">"controller"</span>);</span><br><span class="line">        packageConfig.setService(<span class="string">"service"</span>);</span><br><span class="line">        packageConfig.setServiceImpl(<span class="string">"service.impl"</span>);</span><br><span class="line">        packageConfig.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        packageConfig.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        autoGenerator.setPackageInfo(packageConfig);</span><br><span class="line">        <span class="comment">//配置策略</span></span><br><span class="line">        StrategyConfig strategyConfig = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategyConfig.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        strategyConfig.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategyConfig.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        autoGenerator.setStrategy(strategyConfig);</span><br><span class="line"></span><br><span class="line">        autoGenerator.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-Boot-MyBatis-Plus-打包应用，直接发布-阿里云-上云"><a href="#Spring-Boot-MyBatis-Plus-打包应用，直接发布-阿里云-上云" class="headerlink" title="Spring Boot + MyBatis Plus 打包应用，直接发布 阿里云 上云"></a>Spring Boot + MyBatis Plus 打包应用，直接发布 阿里云 上云</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;MyBatis-Plus&quot;&gt;&lt;a href=&quot;#MyBatis-Plus&quot; class=&quot;headerlink&quot; title=&quot;MyBatis Plus&quot;&gt;&lt;/a&gt;MyBatis Plus&lt;/h3&gt;&lt;p&gt;国产的开源框架，基于 MyBatis&lt;/p&gt;
&lt;p&gt;核心功能
      
    
    </summary>
    
    
    
      <category term="mybatis-plus" scheme="http://yoursite.com/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>VUE中Request Payload 和Formdata的准换</title>
    <link href="http://yoursite.com/2020/05/07/VUE%E4%B8%ADRequest%20Payload%20%E5%92%8CFormdata%E7%9A%84%E5%87%86%E6%8D%A2/"/>
    <id>http://yoursite.com/2020/05/07/VUE%E4%B8%ADRequest%20Payload%20%E5%92%8CFormdata%E7%9A%84%E5%87%86%E6%8D%A2/</id>
    <published>2020-05-06T16:00:00.000Z</published>
    <updated>2020-05-12T14:16:41.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li>导入qs</li><li>用qs.stringif(data)将data将对象 序列化成URL的形式</li><li>还是不行的话加上表头转化（Content-type由application/json转成/application/x-www-form格式）  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.headers = &#123;</span><br><span class="line"><span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">    &#125;</span><br><span class="line">~</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;导入qs&lt;/li&gt;
&lt;li&gt;用qs.stringif(data)将data将对象 序列化成URL的形式&lt;/li&gt;
&lt;li&gt;还是不行的话加上表头转
      
    
    </summary>
    
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="bug" scheme="http://yoursite.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>封装返回值类型</title>
    <link href="http://yoursite.com/2020/05/03/%E5%B0%81%E8%A3%85%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/05/03/%E5%B0%81%E8%A3%85%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-05-02T16:00:00.000Z</published>
    <updated>2020-06-21T14:17:37.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">ResultVO</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> String msg = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  ResultVO success = <span class="keyword">new</span>  ResultVO();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  ResultVO fail = <span class="keyword">new</span>  ResultVO().code(-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  ResultVO <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span>  ResultVO();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt;  <span class="function">ResultVO <span class="title">build</span><span class="params">(T data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span>  ResultVO().data(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  ResultVO <span class="title">code</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  ResultVO <span class="title">data</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  ResultVO <span class="title">msg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用方法如下</span><br><span class="line"><span class="keyword">return</span> ResultVO.success.code(<span class="number">100</span>).msg(<span class="string">"正在查询第"</span> + current + <span class="string">"页\n当前一页"</span> + size + <span class="string">"条数据"</span>).data(spectrumPage);</span><br></pre></td></tr></table></figure><h1 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h1><ul><li>枚举类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wzh.springboot.Enum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wzh</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-03 22:04</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ResultEnum &#123;</span><br><span class="line">    <span class="comment">//这里是可以自己定义的，方便与前端交互即可</span></span><br><span class="line">    UNKNOWN_ERROR(-<span class="number">1</span>,<span class="string">"未知错误"</span>),</span><br><span class="line">    SUCCESS(<span class="number">200</span>,<span class="string">"成功"</span>),</span><br><span class="line">    SERVER_INTERNAL_ERROR(<span class="number">500</span>,<span class="string">"服务器内部错误"</span>),</span><br><span class="line">    RESOURCE_NOT_FOUND(<span class="number">404</span>,<span class="string">"资源未找到"</span>),</span><br><span class="line">    PARAMETER_NOT_VALID(<span class="number">400</span>,<span class="string">"参数不合法"</span>),</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>VO工具类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wzh.springboot.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.wzh.springboot.Enum.ResultEnum;</span><br><span class="line"><span class="keyword">import</span> com.wzh.springboot.VO.ResultVO;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wzh</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-02 01:08</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultVOUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**成功且带数据**/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultVO <span class="title">success</span><span class="params">(Object object)</span></span>&#123;</span><br><span class="line">        ResultVO resultVO = <span class="keyword">new</span> ResultVO();</span><br><span class="line">        resultVO.setCode(ResultEnum.SUCCESS.getCode());</span><br><span class="line">        resultVO.setMsg(ResultEnum.SUCCESS.getMsg());</span><br><span class="line">        resultVO.setData(object);</span><br><span class="line">        <span class="keyword">return</span> resultVO;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**成功但不带数据**/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultVO  <span class="title">success</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> success(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**失败**/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultVO  <span class="title">error</span><span class="params">(Integer code,String msg)</span></span>&#123;</span><br><span class="line">        ResultVO  resultVO  = <span class="keyword">new</span> ResultVO();</span><br><span class="line">        resultVO .setCode(code);</span><br><span class="line">        resultVO .setMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> resultVO ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>VO<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wzh.springboot.VO;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wzh</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-05-02 00:25</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultVO</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultVO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultVO</span><span class="params">(Integer code, String msg, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(Integer code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ResultVOVO&#123;"</span> +</span><br><span class="line">                <span class="string">"code="</span> + code +</span><br><span class="line">                <span class="string">", msg='"</span> + msg + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", data="</span> + data +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; class=&quot;headerlink&quot; title=&quot;第一种&quot;&gt;&lt;/a&gt;第一种&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>编译原理课堂相关（未完）</title>
    <link href="http://yoursite.com/2020/05/03/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2020/05/03/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2020-05-02T16:00:00.000Z</published>
    <updated>2020-06-21T14:18:55.876Z</updated>
    
    <content type="html"><![CDATA[<ul><li>编译程序与解释程序的区别<ul><li>编译程序产生一个与源文件等价的文件</li><li>结束程序不产生等价文件，只在过程中逐步解释</li></ul></li><li>编译程序工作的五个阶段<ul><li>词法分析        ——-&gt;  识别句子中的一个个单词</li><li>词法分析        ——-&gt;  分析句子的语法结构</li><li>中间代码产生    ——-&gt;  根据句子的含义进行初步翻译</li><li>优化           ——-&gt;  对译文进行修饰</li><li>目标代码产生    ——-&gt;  写出最后的译文</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;编译程序与解释程序的区别&lt;ul&gt;
&lt;li&gt;编译程序产生一个与源文件等价的文件&lt;/li&gt;
&lt;li&gt;结束程序不产生等价文件，只在过程中逐步解释&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;编译程序工作的五个阶段&lt;ul&gt;
&lt;li&gt;词法分析        ——-&amp;gt; 
      
    
    </summary>
    
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>swagger的简单入门</title>
    <link href="http://yoursite.com/2020/05/01/swagger%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/05/01/swagger%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-05-01T15:37:51.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="springboot集成swagger"><a href="#springboot集成swagger" class="headerlink" title="springboot集成swagger"></a>springboot集成swagger</h1><ul><li><p>导入依赖</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">~</span><br></pre></td></tr></table></figure></li><li><p>编写HelloController，测试确保运行成功！</p></li><li><p>要使用Swagger，我们需要编写一个配置类-SwaggerConfig来配置 Swagger</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2<span class="comment">// 开启Swagger2的自动配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>访问测试 ：<a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a> ，可以看到swagger的界面；</p></li></ul><h1 id="配置swagger"><a href="#配置swagger" class="headerlink" title="配置swagger"></a>配置swagger</h1><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2<span class="comment">// 开启Swagger2的自动配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span> <span class="comment">//配置docket以配置Swagger具体参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .enable(<span class="keyword">true</span>) <span class="comment">//配置是否启用Swagger，如果是false，在浏览器将无法访问</span></span><br><span class="line">                .select()<span class="comment">// 通过.select()方法，去配置扫描接口,RequestHandlerSelectors配置如何扫描接口</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.wzh.springboot.controller"</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置文档信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Contact contact = <span class="keyword">new</span> Contact(<span class="string">"alexhigger"</span>, <span class="string">"https://github.com/alexhigger"</span>, <span class="string">"773821742@qq.com"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">"Swagger api文档"</span>, <span class="comment">// 标题</span></span><br><span class="line">                <span class="string">"前后端分离的吉他谱项目"</span>, <span class="comment">// 描述</span></span><br><span class="line">                <span class="string">"v1.0"</span>, <span class="comment">// 版本</span></span><br><span class="line">                <span class="keyword">null</span>, <span class="comment">// 组织链接</span></span><br><span class="line">                contact, <span class="comment">// 联系人信息</span></span><br><span class="line">                <span class="string">"Apach 2.0 许可"</span>, <span class="comment">// 许可</span></span><br><span class="line">                <span class="keyword">null</span>, <span class="comment">// 许可连接</span></span><br><span class="line">                <span class="keyword">new</span> ArrayList&lt;&gt;()<span class="comment">// 扩展</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;springboot集成swagger&quot;&gt;&lt;a href=&quot;#springboot集成swagger&quot; class=&quot;headerlink&quot; title=&quot;springboot集成swagger&quot;&gt;&lt;/a&gt;springboot集成swagger&lt;/h1&gt;&lt;ul&gt;

      
    
    </summary>
    
    
    
      <category term="swagger" scheme="http://yoursite.com/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>jdk8新特性--对集合的操作</title>
    <link href="http://yoursite.com/2020/04/25/jdk8%E6%96%B0%E7%89%B9%E6%80%A7--%E5%AF%B9%E9%9B%86%E5%90%88%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/04/25/jdk8%E6%96%B0%E7%89%B9%E6%80%A7--%E5%AF%B9%E9%9B%86%E5%90%88%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-25T15:44:58.661Z</published>
    <updated>2020-06-21T14:34:56.844Z</updated>
    
    <content type="html"><![CDATA[<ul><li>将一个集合包装成包装类<ul><li>常规写法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类型</span></span><br><span class="line">        List&lt;PhoneCategory&gt; phoneCategoryList = phoneCategoryRepository.findAll();</span><br><span class="line">        <span class="comment">//常规写法</span></span><br><span class="line">        List&lt;PhoneCategoryVO&gt; phoneCategoryVOList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (PhoneCategory phoneCategory : phoneCategoryList) &#123;</span><br><span class="line">            PhoneCategoryVO phoneCategoryVO = <span class="keyword">new</span> PhoneCategoryVO();</span><br><span class="line">            phoneCategoryVO.setCategoryName(phoneCategory.getCategoryName());</span><br><span class="line">            phoneCategoryVO.setCategoryType(phoneCategory.getCategoryType());</span><br><span class="line">            phoneCategoryVOList.add(phoneCategoryVO);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li>新特性写法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//新特性写法</span></span><br><span class="line">List&lt;PhoneCategoryVO&gt; phoneCategoryVOList =  phoneCategoryList.stream()</span><br><span class="line">        .map(e -&gt; <span class="keyword">new</span> PhoneCategoryVO(</span><br><span class="line">                e.getCategoryName(),</span><br><span class="line">                e.getCategoryType()</span><br><span class="line">        )).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">dataVO.setCategories(phoneCategoryVOList);</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;将一个集合包装成包装类&lt;ul&gt;
&lt;li&gt;常规写法&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>springboot+vue+FastDFS</title>
    <link href="http://yoursite.com/2020/03/10/springboot+vue+fastdfs/"/>
    <id>http://yoursite.com/2020/03/10/springboot+vue+fastdfs/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-11T13:36:59.395Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="流程" scheme="http://yoursite.com/tags/%E6%B5%81%E7%A8%8B/"/>
    
      <category term="FastDFS" scheme="http://yoursite.com/tags/FastDFS/"/>
    
  </entry>
  
  <entry>
    <title>springboot整合FastDFS</title>
    <link href="http://yoursite.com/2020/03/10/springboot%E6%95%B4%E5%90%88FastDFS/"/>
    <id>http://yoursite.com/2020/03/10/springboot%E6%95%B4%E5%90%88FastDFS/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-10T10:18:38.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="客户端整合fastdfs测试"><a href="#客户端整合fastdfs测试" class="headerlink" title="客户端整合fastdfs测试"></a>客户端整合fastdfs测试</h1><hr><h2 id="方案一（只有上传），推荐方案二"><a href="#方案一（只有上传），推荐方案二" class="headerlink" title="方案一（只有上传），推荐方案二"></a>方案一（只有上传），推荐方案二</h2><ul><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.tobato<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.26.1-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fdfs:</span></span><br><span class="line"> <span class="attr">so-timeout:</span> <span class="number">1500</span></span><br><span class="line"> <span class="attr">connect-timeout:</span> <span class="number">600</span></span><br><span class="line"> <span class="attr">pool:</span></span><br><span class="line">   <span class="attr">jmx-enabled:</span> <span class="literal">false</span></span><br><span class="line"> <span class="attr">thumb-image:</span></span><br><span class="line">   <span class="attr">width:</span> <span class="number">100</span></span><br><span class="line">   <span class="attr">height:</span> <span class="number">100</span></span><br><span class="line"> <span class="attr">tracker-list:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:22122</span></span><br></pre></td></tr></table></figure></li><li><p>启动类上导入配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import</span>(FdfsClientConfig<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootApplication</span></span></span><br></pre></td></tr></table></figure></li><li><p>fastdfs服务器上开放端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@promote conf]# vim &#x2F;etc&#x2F;sysconfig&#x2F;iptables</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22122 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 23000 -j ACCEPT</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart iptables.service</span><br></pre></td></tr></table></figure></li><li><p>测试类测试上传</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> FastFileStorageClient fastFileStorageClient;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">       File file = <span class="keyword">new</span> File(<span class="string">"C:/Users/wuzhe/Desktop/markdown图片/login.jpg"</span>);</span><br><span class="line">       String fileName = file.getName();</span><br><span class="line">       String extName = fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">       FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">       <span class="comment">//</span></span><br><span class="line">       StorePath storePath = fastFileStorageClient.uploadFile(fileInputStream, file.length(), extName, <span class="keyword">null</span>);</span><br><span class="line">       <span class="comment">//</span></span><br><span class="line">       System.out.println(storePath.getGroup());</span><br><span class="line">       System.out.println(storePath.getPath());</span><br><span class="line">       System.out.println(storePath.getFullPath());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>控制台已打印出路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">group1</span><br><span class="line">M00&#x2F;00&#x2F;00&#x2F;wKhQgF5nT7-AIjWMAAASK_JpCrM239.jpg</span><br><span class="line">group1&#x2F;M00&#x2F;00&#x2F;00&#x2F;wKhQgF5nT7-AIjWMAAASK_JpCrM239.jpg</span><br></pre></td></tr></table></figure></li><li><p>本机可访问到图片<br><a href="http://192.168.80.128/group1/M00/00/00/wKhQgF5nT7-AIjWMAAASK_JpCrM239.jpg" target="_blank" rel="noopener">http://192.168.80.128/group1/M00/00/00/wKhQgF5nT7-AIjWMAAASK_JpCrM239.jpg</a></p></li></ul><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><ul><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.oschina.zcx7878<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.27.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置fastdfs-client.properties</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">fastdfs.http_anti_steal_token</span> <span class="string">=</span> <span class="literal">false</span></span><br><span class="line"><span class="string">fastdfs.http_secret_key</span> <span class="string">=</span> <span class="string">FastDFS1234567890</span></span><br><span class="line"><span class="string">fastdfs.http_tracker_http_port</span> <span class="string">=</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="string">fastdfs.tracker_servers</span> <span class="string">=</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:22122</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Whether to open the connection pool, if not, create a new connection every time</span></span><br><span class="line"><span class="string">fastdfs.connection_pool.enabled</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## max_count_per_entry: max connection count per host:port , 0 is not limit</span></span><br><span class="line"><span class="string">fastdfs.connection_pool.max_count_per_entry</span> <span class="string">=</span> <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## connections whose the idle time exceeds this time will be closed, unit: second, default value is 3600</span></span><br><span class="line"><span class="string">fastdfs.connection_pool.max_idle_time</span> <span class="string">=</span> <span class="number">3600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Maximum waiting time when the maximum number of connections is reached, unit: millisecond, default value is 1000</span></span><br><span class="line"><span class="string">fastdfs.connection_pool.max_wait_time_in_ms</span> <span class="string">=</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure></li><li><p>测试类-上传</p><ul><li>测试上传<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">upload</span><span class="params">()</span> <span class="keyword">throws</span> IOException, MyException </span>&#123;</span><br><span class="line">    ClientGlobal.initByProperties(<span class="string">"fastdfs-client.properties"</span>);</span><br><span class="line">    TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">    TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">    StorageServer storageServer = <span class="keyword">null</span>;</span><br><span class="line">    StorageClient1 client1 = <span class="keyword">new</span> StorageClient1(trackerServer, storageServer);</span><br><span class="line">    NameValuePair pairs[] = <span class="keyword">null</span>;</span><br><span class="line">    String fileId = client1.upload_appender_file1(<span class="string">"C:\\Users\\wuzhe\\Desktop\\markdown图片\\login.jpg"</span>, <span class="string">"jpg"</span>, <span class="keyword">null</span>);</span><br><span class="line">    System.out.println(fileId);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>控制台已打印出路径<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group1&#x2F;M00&#x2F;00&#x2F;00&#x2F;wKhQgF5nYfWEfEupAAAAAPJpCrM362.jpg</span><br></pre></td></tr></table></figure></li><li>本机可访问到图片<br><a href="http://192.168.80.128/group1/M00/00/00/wKhQgF5nYfWEfEupAAAAAPJpCrM362.jpg" target="_blank" rel="noopener">http://192.168.80.128/group1/M00/00/00/wKhQgF5nYfWEfEupAAAAAPJpCrM362.jpg</a></li></ul></li><li><p>测试类-下载</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">download</span><span class="params">()</span> <span class="keyword">throws</span> IOException, MyException </span>&#123;</span><br><span class="line">    ClientGlobal.initByProperties(<span class="string">"fastdfs-client.properties"</span>);</span><br><span class="line">    TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">    TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">    StorageServer storageServer = <span class="keyword">null</span>;</span><br><span class="line">    StorageClient1 client1 = <span class="keyword">new</span> StorageClient1(trackerServer, storageServer);</span><br><span class="line">    NameValuePair pairs[] = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = client1.download_file1(<span class="string">"group1/M00/00/00/wKhQgF5nYfWEfEupAAAAAPJpCrM362.jpg"</span>);</span><br><span class="line">    FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(<span class="string">"C:\\Users\\wuzhe\\Desktop\\markdown图片\\login2.jpg"</span>));</span><br><span class="line">    fos.write(bytes);</span><br><span class="line">    fos.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>本机文件夹C:\Users\wuzhe\Desktop\markdown图片<br>得到下载图片login2.jpg</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;客户端整合fastdfs测试&quot;&gt;&lt;a href=&quot;#客户端整合fastdfs测试&quot; class=&quot;headerlink&quot; title=&quot;客户端整合fastdfs测试&quot;&gt;&lt;/a&gt;客户端整合fastdfs测试&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;方案一（只有上传），推荐
      
    
    </summary>
    
    
    
      <category term="流程" scheme="http://yoursite.com/tags/%E6%B5%81%E7%A8%8B/"/>
    
      <category term="FastDFS" scheme="http://yoursite.com/tags/FastDFS/"/>
    
  </entry>
  
  <entry>
    <title>springsecurity--登录</title>
    <link href="http://yoursite.com/2020/03/10/springsecurity--%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2020/03/10/springsecurity--%E7%99%BB%E5%BD%95/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-25T06:34:09.827Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图形验证码认证功能"><a href="#图形验证码认证功能" class="headerlink" title="图形验证码认证功能"></a>图形验证码认证功能</h1><h2 id="生成一张图形验证码"><a href="#生成一张图形验证码" class="headerlink" title="生成一张图形验证码"></a>生成一张图形验证码</h2><blockquote><p>Kaptcha 是谷歌提供的一个生成图形验证码的 jar 包, 只要简单配置属性就可以生成。</p></blockquote><ol><li>添加 Kaptcha 依赖，在 mengxuegu-security-core\pom.xml 中 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--图形验证码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.penggle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kaptcha<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>生成验证码配置类，在 mengxuegu-security-core 模块中创建<br>com.mengxuegu.security.authentication.code.KaptchaImageCodeConfig <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mengxuegu.security.authentication.code;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.Constants;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.util.Config;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 生成验证码配置类</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Auther</span>: wzh</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KaptchaImageCodeConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultKaptcha <span class="title">getDefaultKaptcha</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DefaultKaptcha defaultKaptcha = <span class="keyword">new</span> DefaultKaptcha();</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_BORDER, <span class="string">"yes"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_BORDER_COLOR, <span class="string">"192,192,192"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_IMAGE_WIDTH, <span class="string">"110"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_IMAGE_HEIGHT, <span class="string">"36"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_COLOR, <span class="string">"blue"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_SIZE, <span class="string">"28"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_NAMES, <span class="string">"宋体"</span>);</span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_CHAR_LENGTH, <span class="string">"4"</span>);</span><br><span class="line">        <span class="comment">// 图片效果</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_OBSCURIFICATOR_IMPL,</span><br><span class="line">                <span class="string">"com.google.code.kaptcha.impl.ShadowGimpy"</span>);</span><br><span class="line">        Config config = <span class="keyword">new</span> Config(properties);</span><br><span class="line">        defaultKaptcha.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> defaultKaptcha;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 CustomLoginController 提供请求接口，将验证码图片数据流写出 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> DefaultKaptcha defaultKaptcha;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取图形验证码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SESSION_KEY = <span class="string">"SESSION_KEY_IMAGE_CODE"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/code/image"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">imageCode</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span></span></span><br><span class="line"><span class="function">        IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1. 获取验证码字符串</span></span><br><span class="line">    String code = defaultKaptcha.createText();</span><br><span class="line">    logger.info(<span class="string">"生成的图形验证码是："</span> + code);</span><br><span class="line"><span class="comment">// 2. 字符串把它放到session中</span></span><br><span class="line">    request.getSession().setAttribute(SESSION_KEY, code);</span><br><span class="line"><span class="comment">// 3. 获取验证码图片</span></span><br><span class="line">    BufferedImage image = defaultKaptcha.createImage(code);</span><br><span class="line"><span class="comment">// 4. 将验证码图片把它写出去</span></span><br><span class="line">    ServletOutputStream out = response.getOutputStream();</span><br><span class="line">    ImageIO.write(image, <span class="string">"jpg"</span>, out);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 SpringSecurityConfig.configure(HttpSecurity http) 放行 /code/image 资源权限 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(securityProperties.getAuthentication().getLoginPage(),</span><br><span class="line"><span class="string">"/code/image"</span>).permitAll(</span><br><span class="line">~</span><br></pre></td></tr></table></figure></li><li>重构 mengxuegu-security-web 模块的 login.html 页面，调用验证码接口渲染图片 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row mb-2 "</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-6"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"code"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"验证码"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-6"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">onclick</span>=<span class="string">"this.src='/code/image?'+Math.random()"</span> <span class="attr">src</span>=<span class="string">"/code/image"</span> <span class="attr">alt</span>=<span class="string">"验证码"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">~</span><br></pre></td></tr></table></figure><h2 id="实现验证码校验过滤器"><a href="#实现验证码校验过滤器" class="headerlink" title="实现验证码校验过滤器"></a>实现验证码校验过滤器</h2></li><li>创建 com.mengxuegu.security.authentication.code.ImageCodeValidateFilter ，继承 OncePerRequestFilter （在所有请求前都被调用一次<ul><li>在类上加上注解 @Component(“imageCodeValidateFilter”)</li><li>如果是登录请求（请求地址： /login/form ，请求方式： post ），校验验证码输入是否正确<br>校验不合法时，提示信息通过自定义异常 ValidateCodeExcetipn 抛出 , 此异常要继承<br>org.springframework.security.core.AuthenticationException  ，它是认证的父异常类。<br>捕获 ImageCodeException 异常，交给失败处理器 CustomAuthenticationFailureHandler 。</li><li>如果非登录请求，则放行请求 filterChain.doFilter(request, response)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mengxuegu.security.authentication.code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.authentication.CustomAuthenticationFailureHandler;</span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.authentication.exception.ValidateCodeException;</span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.controller.CustomLoginController;</span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.properties.SecurityProperties;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* OncePerRequestFilter: 所有请求之前被调用一次</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Auther</span>: 梦学谷 www.mengxuegu.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"imageCodeValidateFilter"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageCodeValidateFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SecurityProperties securityProperties;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CustomAuthenticationFailureHandler customAuthenticationFailureHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    HttpServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 如果是post方式 的登录请求，则校验输入的验证码是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (securityProperties.getAuthentication().getLoginProcessingUrl()</span><br><span class="line">                .equals(request.getRequestURI())</span><br><span class="line">                &amp;&amp; request.getMethod().equalsIgnoreCase(<span class="string">"post"</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 校验验证码合法性</span></span><br><span class="line">                validate(request);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">        <span class="comment">// 交给失败处理器进行处理异常</span></span><br><span class="line">                customAuthenticationFailureHandler.onAuthenticationFailure(request, response, e);</span><br><span class="line">        <span class="comment">// 一定要记得结束</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 放行请求</span></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 先获取seesion中的验证码</span></span><br><span class="line">        String sessionCode = (String) request.getSession().getAttribute(CustomLoginController.SESSION_KEY);</span><br><span class="line">        <span class="comment">// 获取用户输入的验证码</span></span><br><span class="line">        String inpuCode = request.getParameter(<span class="string">"code"</span>);</span><br><span class="line">        <span class="comment">// 判断是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(inpuCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ValidateCodeException(<span class="string">"验证码不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!inpuCode.equalsIgnoreCase(sessionCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ValidateCodeException(<span class="string">"验证码输入错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>创建验证码异常类 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mengxuegu.security.authentication.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 描述：</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span>: wzh</span></span><br><span class="line"><span class="comment">* <span class="doctag">@create</span>: 2020-03-21 17:19</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateCodeException</span> <span class="keyword">extends</span> <span class="title">AuthenticationException</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValidateCodeException</span><span class="params">(String msg, Throwable t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg, t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValidateCodeException</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重构 SpringSecurityConfig<blockquote><p>将校验过滤器 imageCodeValidateFilter 添加到 UsernamePasswordAuthenticationFilter 前面<br>在 com.mengxuegu.security.config.SpringSecurityConfig 中完成以下操作</p></blockquote><ul><li>注入 ImageCodeValidateFilter 实例  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证码校验过滤器</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">ImageCodeValidateFilter imageCodeValidateFilter;</span><br></pre></td></tr></table></figure></li><li>把 ImageCodeValidateFilter 添加 UsernamePasswordAuthenticationFilter 实例前  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http.addFilterBefore(imageCodeValidateFilter,</span><br><span class="line">UsernamePasswordAuthenticationFilter<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">.<span class="title">formLogin</span>()</span></span><br></pre></td></tr></table></figure>  SpringSecurityConfig 完整代码  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mengxuegu.security.config;</span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.authentication.code.ImageCodeValidateFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mengxuegu.security.properties.SecurityProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationFailureHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 安全控制中心</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Auther</span>: 梦学谷 www.mengxuegu.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">//启动 SpringSecurity 过滤器链功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SecurityProperties securityProperties;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 设置默认的加密方式</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 报红线没关系 ，idea识别问题</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService customUserDetailsService;</span><br><span class="line">    <span class="comment">// 注入自定义的认证成功处理器</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationSuccessHandler customAuthenticationSuccessHandler;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationFailureHandler customAuthenticationFailureHandler;</span><br><span class="line">    <span class="comment">// 验证码校验过滤器</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ImageCodeValidateFilter imageCodeValidateFilter;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 认证管理器：</span></span><br><span class="line"><span class="comment">    * 1、认证信息提供方式（用户名、密码、当前用户的资源权限）</span></span><br><span class="line"><span class="comment">    * 2、可采用内存存储方式，也可能采用数据库方式等</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> auth</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 用户信息存储在内存中</span></span><br><span class="line"><span class="comment">// String password = passwordEncoder().encode("1234");</span></span><br><span class="line"><span class="comment">// logger.info("加密之后存储的密码：" + password);</span></span><br><span class="line"><span class="comment">// auth.inMemoryAuthentication().withUser("mengxuegu")</span></span><br><span class="line"><span class="comment">// .password(password).authorities("ADMIN");</span></span><br><span class="line">        auth.userDetailsService(customUserDetailsService);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 资源权限配置（过滤器链）:</span></span><br><span class="line"><span class="comment">    * 1、被拦截的资源</span></span><br><span class="line"><span class="comment">    * 2、资源所对应的角色权限</span></span><br><span class="line"><span class="comment">    * 3、定义认证方式：httpBasic 、httpForm</span></span><br><span class="line"><span class="comment">    * 4、定制登录页面、登录请求地址、错误处理方式</span></span><br><span class="line"><span class="comment">    * 5、自定义 spring security 过滤器</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// http.httpBasic()</span></span><br><span class="line">        http.addFilterBefore(imageCodeValidateFilter, UsernamePasswordAuthenticationFilter<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">                .<span class="title">formLogin</span>() // 表单认证</span></span><br><span class="line"><span class="class">                .<span class="title">loginPage</span>(<span class="title">securityProperties</span>.<span class="title">getAuthentication</span>().<span class="title">getLoginPage</span>())</span></span><br><span class="line"><span class="class">                .<span class="title">loginProcessingUrl</span>(<span class="title">securityProperties</span>.<span class="title">getAuthentication</span>().<span class="title">getLoginProcessingUrl</span>())</span></span><br><span class="line"><span class="class">                .<span class="title">usernameParameter</span>(<span class="title">securityProperties</span>.<span class="title">getAuthentication</span>().<span class="title">getUsernameParameter</span>())</span></span><br><span class="line"><span class="class">                .<span class="title">passwordParameter</span>(<span class="title">securityProperties</span>.<span class="title">getAuthentication</span>().<span class="title">getPasswordParameter</span>())</span></span><br><span class="line"><span class="class">                .<span class="title">successHandler</span>(<span class="title">customAuthenticationSuccessHandler</span>) //认证成功处理器</span></span><br><span class="line"><span class="class">                .<span class="title">failureHandler</span>(<span class="title">customAuthenticationFailureHandler</span>) //认证失败处理器</span></span><br><span class="line"><span class="class">                .<span class="title">and</span>()</span></span><br><span class="line"><span class="class">                .<span class="title">authorizeRequests</span>() // 认证请求</span></span><br><span class="line"><span class="class">                .<span class="title">antMatchers</span>(</span></span><br><span class="line"><span class="class">                        <span class="title">securityProperties</span>.<span class="title">getAuthentication</span>().<span class="title">getLoginPage</span>(),</span></span><br><span class="line">                        "/code/image"</span><br><span class="line">                ).permitAll()</span><br><span class="line">                .anyRequest().authenticated() <span class="comment">// 所有进入应用的HTTP请求都要进行认证</span></span><br><span class="line">        ; <span class="comment">// 分号`;`不要少了</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 释放静态资源</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> web</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> </span>&#123;</span><br><span class="line">        web.ignoring().antMatchers(</span><br><span class="line">                securityProperties.getAuthentication().getStaticPaths());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Remember-Me-记住我功能"><a href="#Remember-Me-记住我功能" class="headerlink" title="Remember-Me 记住我功能"></a>Remember-Me 记住我功能</h1><blockquote><p>效果: 登录后会记住用户令牌，不用反复登录 。</p><ol><li>用户选择了“记住我”成功登录后，将会把username、随机生成的序列号、生成的token存入一个数据库表<br>中，同时将它们的组合生成一个cookie发送给客户端浏览器。</li><li>当没有登录的用户访问系统时，首先检查 remember-me 的 cookie 值 ，有则检查其值包含的 username、<br>序列号和 token 与数据库中是否一致，一致则通过验证。<br>并且系统还会重新生成一个新的 token 替换数据库中对应旧的 token，序列&gt;号 series 保持不变 ，同时删除旧<br>的 cookie，重新生成 cookie 值（新的 token + 旧的序列号 + username）发送给客户端。</li><li>如果对应cookie不存在，或者包含的username、序列号和token 与数据库中保存的不一致，那么将会引导用<br>户到登录页面。<br>因为cookie被盗用后还可以在用户下一次登录前顺利的进行登录，所以如果你的应用对安全性要求比较高就<br>不要使用Remember-Me功能。</li></ol></blockquote><h2 id="实现用户名密码-Remember-Me-功能"><a href="#实现用户名密码-Remember-Me-功能" class="headerlink" title="实现用户名密码 Remember-Me 功能"></a>实现用户名密码 Remember-Me 功能</h2></li></ul></li><li>mengxuegu-security-core 的 pom.xml 引入依赖 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>mengxuegu-security-web 的 application.yml 配置数据源 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">thymeleaf:</span></span><br><span class="line"><span class="attr">cache:</span> <span class="literal">false</span> <span class="comment">#关闭thymeleaf缓存</span></span><br><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">datasource:</span></span><br><span class="line"><span class="attr">username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/study-security?</span></span><br><span class="line"><span class="string">serverTimezone=GMT%2B8&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="comment">#mysql8版本以上驱动包指定新的驱动类</span></span><br><span class="line"><span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure></li><li>在数据库中创建一个 study-security</li><li>使用 JdbcTokenRepository 实现类 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">省略</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">...省略</span><br><span class="line"><span class="comment">// 记住我功能</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">DataSource dataSource;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JdbcTokenRepositoryImpl <span class="title">jdbcTokenRepository</span><span class="params">()</span> </span>&#123;</span><br><span class="line">JdbcTokenRepositoryImpl jdbcTokenRepository = <span class="keyword">new</span> JdbcTokenRepositoryImpl();</span><br><span class="line">jdbcTokenRepository.setDataSource(dataSource);</span><br><span class="line"><span class="comment">// 是否启动时自动创建表，第一次启动创建就行，后面启动把这个注释掉,不然报错已存在表</span></span><br><span class="line"><span class="comment">// jdbcTokenRepository.setCreateTableOnStartup(true);</span></span><br><span class="line"><span class="keyword">return</span> jdbcTokenRepository;</span><br><span class="line">&#125;</span><br><span class="line">...省略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>安全配置 SpringSecurityConfig#configure(HttpSecurity http) <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and()</span><br><span class="line">.rememberMe() <span class="comment">//记住我</span></span><br><span class="line">.tokenRepository(jdbcTokenRepository()) <span class="comment">// 保存登录信息</span></span><br><span class="line">.tokenValiditySeconds(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>) <span class="comment">// 记住我有效时长（秒）</span></span><br></pre></td></tr></table></figure></li><li>修改mengxuegu-security-web 模块中的 login.html 记住我的 name=”remember-me” <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"remember-me"</span> &gt; 记住我</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图形验证码认证功能&quot;&gt;&lt;a href=&quot;#图形验证码认证功能&quot; class=&quot;headerlink&quot; title=&quot;图形验证码认证功能&quot;&gt;&lt;/a&gt;图形验证码认证功能&lt;/h1&gt;&lt;h2 id=&quot;生成一张图形验证码&quot;&gt;&lt;a href=&quot;#生成一张图形验证码&quot; class
      
    
    </summary>
    
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="流程" scheme="http://yoursite.com/tags/%E6%B5%81%E7%A8%8B/"/>
    
      <category term="前后端分离" scheme="http://yoursite.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>easycode+MDP分页查询</title>
    <link href="http://yoursite.com/2020/03/09/easycode+MDP%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    <id>http://yoursite.com/2020/03/09/easycode+MDP%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-03-08T16:00:00.000Z</published>
    <updated>2020-05-03T14:49:22.497Z</updated>
    
    <content type="html"><![CDATA[<ul><li>设计表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名'</span>,</span><br><span class="line">  <span class="string">`nick_name`</span> <span class="built_in">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'昵称'</span>,</span><br><span class="line">  <span class="string">`avatar`</span> <span class="built_in">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'头像'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`salt`</span> <span class="built_in">varchar</span>(<span class="number">40</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'加密盐'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">  <span class="string">`mobile`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'手机号'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">tinyint</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态  0：禁用   1：正常'</span>,</span><br><span class="line">  <span class="string">`dept_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'机构ID'</span>,</span><br><span class="line">  <span class="string">`create_by`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建人'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`last_update_by`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新人'</span>,</span><br><span class="line">  <span class="string">`last_update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  <span class="string">`del_flag`</span> <span class="built_in">tinyint</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否删除  -1：已删除  0：正常'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`name`</span> (<span class="string">`name`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">34</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'用户管理'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'admin'</span>, <span class="string">'管理员'</span>, <span class="literal">null</span>, <span class="string">'bd1718f058d8a02468134432b8656a86'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'admin@qq.com'</span>, <span class="string">'13612345678'</span>, <span class="string">'1'</span>, <span class="string">'4'</span>, <span class="string">'admin'</span>, <span class="string">'2018-08-14 11:11:11'</span>, <span class="string">'admin'</span>, <span class="string">'2018-08-14 11:11:11'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'liubei'</span>, <span class="string">'刘备'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'7'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:43:00'</span>, <span class="string">'admin'</span>, <span class="string">'2019-01-10 11:41:13'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'zhaoyun'</span>, <span class="string">'赵云'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'7'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:43:44'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:43:52'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'zhugeliang'</span>, <span class="string">'诸葛亮'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'7'</span>, <span class="string">'11'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:44:23'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:44:29'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'caocao'</span>, <span class="string">'曹操'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'8'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:45:32'</span>, <span class="string">'admin'</span>, <span class="string">'2019-01-10 17:59:14'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'dianwei'</span>, <span class="string">'典韦'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'10'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:45:48'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:45:57'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'7'</span>, <span class="string">'xiahoudun'</span>, <span class="string">'夏侯惇'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'8'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:46:09'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:46:17'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'8'</span>, <span class="string">'xunyu'</span>, <span class="string">'荀彧'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'10'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:46:38'</span>, <span class="string">'admin'</span>, <span class="string">'2018-11-04 15:33:17'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'9'</span>, <span class="string">'sunquan'</span>, <span class="string">'孙权'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'10'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:46:54'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:47:03'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'0'</span>, <span class="string">'zhouyu'</span>, <span class="string">'周瑜'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'11'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:47:28'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:48:04'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'11'</span>, <span class="string">'luxun'</span>, <span class="string">'陆逊'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'11'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:47:44'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:47:58'</span>, <span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'12'</span>, <span class="string">'huanggai'</span>, <span class="string">'黄盖'</span>, <span class="literal">null</span>, <span class="string">'fd80ebd493a655608dc893a9f897d845'</span>, <span class="string">'YzcmCZNvbXocrsz9dm8e'</span>, <span class="string">'test@qq.com'</span>, <span class="string">'13889700023'</span>, <span class="string">'1'</span>, <span class="string">'11'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:48:38'</span>, <span class="string">'admin'</span>, <span class="string">'2018-09-23 19:49:02'</span>, <span class="string">'0'</span>);</span><br></pre></td></tr></table></figure></li><li>引入mybatis-plus依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>easycode插件生成自动代码</li><li>创建MybatisPlusPageConfig工具类注册分页插件<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wzh.fenyepage.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.optimize.JsqlParserCountOptimize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述：mybatis 分页插件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wzh</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-08 21:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//Spring boot方式</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusPageConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setOverflow(false);</span></span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setLimit(500);</span></span><br><span class="line">        <span class="comment">// 开启 count 的 join 优化,只针对部分 left join</span></span><br><span class="line">        paginationInterceptor.setCountSqlParser(<span class="keyword">new</span> JsqlParserCountOptimize(<span class="keyword">true</span>));</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>controller层自动生成的分页查询方法(二种)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 分页查询所有数据</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> page 分页对象</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> user 查询实体</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> 所有数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@GetMapping</span>()</span><br><span class="line">  <span class="function"><span class="keyword">public</span> R <span class="title">selectAll</span><span class="params">(Page&lt;User&gt; page, User user)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> success(<span class="keyword">this</span>.userService.page(page, <span class="keyword">new</span> QueryWrapper&lt;&gt;(user)));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *   分页查询所有数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> current</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@GetMapping</span>(<span class="string">"/page/&#123;current&#125;/&#123;size&#125;"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultVO <span class="title">findAll</span><span class="params">(@PathVariable(<span class="string">"current"</span>)</span> Integer current, @<span class="title">PathVariable</span><span class="params">(<span class="string">"size"</span>)</span> Integer size)</span>&#123;</span><br><span class="line">      QueryWrapper&lt;Spectrum&gt; wrapper = <span class="keyword">new</span> QueryWrapper();</span><br><span class="line">      Page&lt;Spectrum&gt; page = <span class="keyword">new</span> Page&lt;&gt;(current,size,<span class="keyword">false</span>);</span><br><span class="line">      Page&lt;Spectrum&gt; spectrumPage =spectrumService.page(page, wrapper);</span><br><span class="line">      <span class="keyword">return</span> ResultVOUtil.success(spectrumPage);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li>postman测试<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;user?size&#x3D;5&amp;current&#x3D;2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;records&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 6,</span><br><span class="line">                &quot;name&quot;: &quot;dianwei&quot;,</span><br><span class="line">                &quot;nickName&quot;: &quot;典韦&quot;,</span><br><span class="line">                &quot;avatar&quot;: null,</span><br><span class="line">                &quot;password&quot;: &quot;fd80ebd493a655608dc893a9f897d845&quot;,</span><br><span class="line">                &quot;salt&quot;: &quot;YzcmCZNvbXocrsz9dm8e&quot;,</span><br><span class="line">                &quot;email&quot;: &quot;test@qq.com&quot;,</span><br><span class="line">                &quot;mobile&quot;: &quot;13889700023&quot;,</span><br><span class="line">                &quot;status&quot;: 1,</span><br><span class="line">                &quot;deptId&quot;: 10,</span><br><span class="line">                &quot;createBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2018-09-23T11:45:48.000+0000&quot;,</span><br><span class="line">                &quot;lastUpdateBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;lastUpdateTime&quot;: &quot;2018-09-23T11:45:57.000+0000&quot;,</span><br><span class="line">                &quot;delFlag&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 7,</span><br><span class="line">                &quot;name&quot;: &quot;xiahoudun&quot;,</span><br><span class="line">                &quot;nickName&quot;: &quot;夏侯惇&quot;,</span><br><span class="line">                &quot;avatar&quot;: null,</span><br><span class="line">                &quot;password&quot;: &quot;fd80ebd493a655608dc893a9f897d845&quot;,</span><br><span class="line">                &quot;salt&quot;: &quot;YzcmCZNvbXocrsz9dm8e&quot;,</span><br><span class="line">                &quot;email&quot;: &quot;test@qq.com&quot;,</span><br><span class="line">                &quot;mobile&quot;: &quot;13889700023&quot;,</span><br><span class="line">                &quot;status&quot;: 1,</span><br><span class="line">                &quot;deptId&quot;: 8,</span><br><span class="line">                &quot;createBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2018-09-23T11:46:09.000+0000&quot;,</span><br><span class="line">                &quot;lastUpdateBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;lastUpdateTime&quot;: &quot;2018-09-23T11:46:17.000+0000&quot;,</span><br><span class="line">                &quot;delFlag&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 8,</span><br><span class="line">                &quot;name&quot;: &quot;xunyu&quot;,</span><br><span class="line">                &quot;nickName&quot;: &quot;荀彧&quot;,</span><br><span class="line">                &quot;avatar&quot;: null,</span><br><span class="line">                &quot;password&quot;: &quot;fd80ebd493a655608dc893a9f897d845&quot;,</span><br><span class="line">                &quot;salt&quot;: &quot;YzcmCZNvbXocrsz9dm8e&quot;,</span><br><span class="line">                &quot;email&quot;: &quot;test@qq.com&quot;,</span><br><span class="line">                &quot;mobile&quot;: &quot;13889700023&quot;,</span><br><span class="line">                &quot;status&quot;: 1,</span><br><span class="line">                &quot;deptId&quot;: 10,</span><br><span class="line">                &quot;createBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2018-09-23T11:46:38.000+0000&quot;,</span><br><span class="line">                &quot;lastUpdateBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;lastUpdateTime&quot;: &quot;2018-11-04T07:33:17.000+0000&quot;,</span><br><span class="line">                &quot;delFlag&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 9,</span><br><span class="line">                &quot;name&quot;: &quot;sunquan&quot;,</span><br><span class="line">                &quot;nickName&quot;: &quot;孙权&quot;,</span><br><span class="line">                &quot;avatar&quot;: null,</span><br><span class="line">                &quot;password&quot;: &quot;fd80ebd493a655608dc893a9f897d845&quot;,</span><br><span class="line">                &quot;salt&quot;: &quot;YzcmCZNvbXocrsz9dm8e&quot;,</span><br><span class="line">                &quot;email&quot;: &quot;test@qq.com&quot;,</span><br><span class="line">                &quot;mobile&quot;: &quot;13889700023&quot;,</span><br><span class="line">                &quot;status&quot;: 1,</span><br><span class="line">                &quot;deptId&quot;: 10,</span><br><span class="line">                &quot;createBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2018-09-23T11:46:54.000+0000&quot;,</span><br><span class="line">                &quot;lastUpdateBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;lastUpdateTime&quot;: &quot;2018-09-23T11:47:03.000+0000&quot;,</span><br><span class="line">                &quot;delFlag&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 11,</span><br><span class="line">                &quot;name&quot;: &quot;luxun&quot;,</span><br><span class="line">                &quot;nickName&quot;: &quot;陆逊&quot;,</span><br><span class="line">                &quot;avatar&quot;: null,</span><br><span class="line">                &quot;password&quot;: &quot;fd80ebd493a655608dc893a9f897d845&quot;,</span><br><span class="line">                &quot;salt&quot;: &quot;YzcmCZNvbXocrsz9dm8e&quot;,</span><br><span class="line">                &quot;email&quot;: &quot;test@qq.com&quot;,</span><br><span class="line">                &quot;mobile&quot;: &quot;13889700023&quot;,</span><br><span class="line">                &quot;status&quot;: 1,</span><br><span class="line">                &quot;deptId&quot;: 11,</span><br><span class="line">                &quot;createBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2018-09-23T11:47:44.000+0000&quot;,</span><br><span class="line">                &quot;lastUpdateBy&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;lastUpdateTime&quot;: &quot;2018-09-23T11:47:58.000+0000&quot;,</span><br><span class="line">                &quot;delFlag&quot;: 0</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;total&quot;: 12,</span><br><span class="line">        &quot;size&quot;: 5,</span><br><span class="line">        &quot;current&quot;: 2,</span><br><span class="line">        &quot;orders&quot;: [],</span><br><span class="line">        &quot;hitCount&quot;: false,</span><br><span class="line">        &quot;searchCount&quot;: true,</span><br><span class="line">        &quot;pages&quot;: 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;msg&quot;: &quot;执行成功&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;设计表&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="mybatis-plus" scheme="http://yoursite.com/tags/mybatis-plus/"/>
    
      <category term="easycode，流程，插件" scheme="http://yoursite.com/tags/easycode%EF%BC%8C%E6%B5%81%E7%A8%8B%EF%BC%8C%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-plus 自动生成代码流程</title>
    <link href="http://yoursite.com/2020/03/08/MP%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/03/08/MP%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E6%B5%81%E7%A8%8B/</id>
    <published>2020-03-07T16:00:00.000Z</published>
    <updated>2020-05-03T16:58:25.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MDP自动生成代码流程"><a href="#MDP自动生成代码流程" class="headerlink" title="MDP自动生成代码流程"></a>MDP自动生成代码流程</h2><blockquote><p>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p></blockquote><ul><li>poml要引入依赖  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--模板引擎：thymeleaf,java8time--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis-plus完成项目构建所需模板，真实项目不需要使用--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">+ 创建工具包</span><br><span class="line">    ~~~java</span><br><span class="line">    + 创建自动生成配置类</span><br><span class="line">        ~~~java</span><br><span class="line">    package com.wzh.springboot.config;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">    * 描述：</span><br><span class="line">    *</span><br><span class="line">    * @author: wzh</span><br><span class="line">    * @create: 2020-05-04 00:52</span><br><span class="line">    **/</span><br><span class="line"></span><br><span class="line">    import com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line">    import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;</span><br><span class="line"></span><br><span class="line">    import java.util.ArrayList;</span><br><span class="line">    import java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">    * <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    * 代码生成器</span><br><span class="line">    * <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    *</span><br><span class="line">    * @author gzh</span><br><span class="line">    */</span><br><span class="line">    public class MybatisPlusGenerator &#123;</span><br><span class="line">        public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">            // 代码生成器</span><br><span class="line">            AutoGenerator mpg = new AutoGenerator();</span><br><span class="line"></span><br><span class="line">            // 全局配置</span><br><span class="line">            GlobalConfig gc = new GlobalConfig();</span><br><span class="line">            String projectPath = System.getProperty("user.dir");</span><br><span class="line">            gc.setOutputDir(projectPath + "/src/main/java");</span><br><span class="line">            gc.setAuthor("wzh");//Mapper,Service类注解中显示创建人信息</span><br><span class="line">            //gc.setBaseColumnList(true); //在Mapper.xml文件中是否生成公用SQL代码段</span><br><span class="line">            //gc.setBaseResultMap(true);  //在Mapper.xml文件中是否生成公用返回集合ResultMap</span><br><span class="line">            gc.setOpen(false);  //文件生成完毕后，是否需要打开所在路径</span><br><span class="line">            mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">            // 数据源配置</span><br><span class="line">            DataSourceConfig dsc = new DataSourceConfig();</span><br><span class="line">            dsc.setUrl("jdbc:mysql://localhost:3306/musichome?serverTimezone=UTC&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8");</span><br><span class="line">            dsc.setDriverName("com.mysql.cj.jdbc.Driver");</span><br><span class="line">            dsc.setUsername("root");</span><br><span class="line">            dsc.setPassword("111111");</span><br><span class="line">            mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">            // 包配置</span><br><span class="line">            PackageConfig pc = new PackageConfig();</span><br><span class="line">            pc.setParent("com.wzh.springboot");  //父级公用包名，就是自动生成的文件放在项目路径下的那个包中</span><br><span class="line">            pc.setEntity("entity");</span><br><span class="line">            pc.setMapper("dao");</span><br><span class="line">            pc.setService("service");</span><br><span class="line">            pc.setServiceImpl("service.impl");</span><br><span class="line">            pc.setController("controller");</span><br><span class="line">    //        pc.setXml("resources");</span><br><span class="line">            mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            // 自定义配置</span><br><span class="line">            InjectionConfig cfg = new InjectionConfig() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void initMap() &#123;</span><br><span class="line">                    // to do nothing</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            List<span class="tag">&lt;<span class="name">FileOutConfig</span>&gt;</span> focList = new ArrayList<span class="tag">&lt;&gt;</span>();</span><br><span class="line">            focList.add(new FileOutConfig("/templates/mapper.xml.ftl") &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public String outputFile(TableInfo tableInfo) &#123;</span><br><span class="line">                    // 自定义Mapper.xml文件存放的路径</span><br><span class="line">                    return projectPath + "/src/main/resources/mybatis/mapper/"</span><br><span class="line">                            + tableInfo.getEntityName() + "Mapper" + StringPool.DOT_XML;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            cfg.setFileOutConfigList(focList);</span><br><span class="line">            mpg.setCfg(cfg);</span><br><span class="line">            mpg.setTemplate(new TemplateConfig().setXml(null));</span><br><span class="line"></span><br><span class="line">            // 策略配置</span><br><span class="line">            StrategyConfig strategy = new StrategyConfig();</span><br><span class="line">            strategy.setNaming(NamingStrategy.underline_to_camel);  //Entity文件名称命名规范</span><br><span class="line">            strategy.setColumnNaming(NamingStrategy.underline_to_camel); //Entity字段名称</span><br><span class="line">            strategy.setEntityLombokModel(true); //是否使用lombok完成Entity实体标注Getting Setting ToString 方法</span><br><span class="line">            //strategy.setRestControllerStyle(true); //Controller注解使用是否RestController标注,否则是否开启使用Controller标注</span><br><span class="line">            strategy.entityTableFieldAnnotationEnable(true); //是否在Entity属性上通过注解完成对数据库字段的映射</span><br><span class="line">            strategy.setControllerMappingHyphenStyle(true);  //Controller注解名称，不使用驼峰，使用连字符</span><br><span class="line">            strategy.setTablePrefix("sys_");  //表前缀，添加该表示，则生成的实体，不会有表前缀，比如sys_dept 生成就是Dept</span><br><span class="line">            //strategy.setFieldPrefix("sys_");  //字段前缀</span><br><span class="line">            mpg.setStrategy(strategy);</span><br><span class="line">            mpg.setTemplateEngine(new FreemarkerTemplateEngine());</span><br><span class="line">            mpg.execute();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="运行即可"><a href="#运行即可" class="headerlink" title="运行即可"></a>运行即可</h1></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MDP自动生成代码流程&quot;&gt;&lt;a href=&quot;#MDP自动生成代码流程&quot; class=&quot;headerlink&quot; title=&quot;MDP自动生成代码流程&quot;&gt;&lt;/a&gt;MDP自动生成代码流程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;AutoGenerator 是 MyBat
      
    
    </summary>
    
    
    
      <category term="流程" scheme="http://yoursite.com/tags/%E6%B5%81%E7%A8%8B/"/>
    
      <category term="mybatis-plus" scheme="http://yoursite.com/tags/mybatis-plus/"/>
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>vue-路由</title>
    <link href="http://yoursite.com/2020/02/11/vue/vue%E8%B7%AF%E7%94%B1/"/>
    <id>http://yoursite.com/2020/02/11/vue/vue%E8%B7%AF%E7%94%B1/</id>
    <published>2020-02-11T10:26:55.391Z</published>
    <updated>2020-02-11T10:40:11.514Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue，bootstrap" scheme="http://yoursite.com/tags/vue%EF%BC%8Cbootstrap/"/>
    
  </entry>
  
  <entry>
    <title>vue组件化开发+bootstrap项目dashboard思路</title>
    <link href="http://yoursite.com/2020/02/11/vue/vue%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2020/02/11/vue/vue%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</id>
    <published>2020-02-11T10:18:16.660Z</published>
    <updated>2020-01-18T13:43:11.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue组件化开发"><a href="#vue组件化开发" class="headerlink" title="vue组件化开发"></a>vue组件化开发</h2><p>组件（component） 是 Vue.js 最强大的功能之一。<br>Vue 中的组件化开发就是把网页的重复代码抽取出来 ，封装成一个个可复用的视图组件，然后将这些视图组件拼接<br>到一块就构成了一个完整的系统。这种方式非常灵活，可以极大的提高我们开发和维护的效率。<br>通常一套系统会以一棵嵌套的组件树的形式来组织：  </p><blockquote><p>例如：项目可能会有头部、底部、页侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类<br>的组件。<br><img src="https://i.loli.net/2020/01/18/dpXyeV5cTNmhxRD.png" alt="QQ图片20200118213001.png"></p></blockquote><ul><li>组件就是对局部视图的封装，每个组件包含了：<ul><li>HTML 结构</li><li>CSS 样式</li><li>JavaScript 行为<ul><li>data 数据</li><li>methods 行为</li></ul></li></ul></li><li>提高开发效率，增强可维护性，更好的去解决软件上的高耦合、低内聚、无重用的3大代码问题</li><li>Vue 中的组件思想借鉴于 React</li><li>目前主流的前端框架：Angular、React 、Vue 都是组件化开发思想</li></ul><h2 id="组件化基本开发步骤"><a href="#组件化基本开发步骤" class="headerlink" title="组件化基本开发步骤"></a>组件化基本开发步骤</h2><ul><li>定义组件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义局部组件对象</span></span><br><span class="line"><span class="keyword">var</span> ComponentB = &#123;</span><br><span class="line">    template: <span class="string">'&lt;div&gt; 这是：&#123;&#123; name &#125;&#125;&lt;/div&gt;'</span>,</span><br><span class="line">    data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name: <span class="string">'局部组件'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>说明：</p><ul><li>组件名：<ul><li>可使用驼峰(camelCase)或者横线分隔(kebab-case)命名方式</li><li>但 DOM 中只能使用横线分隔方式进行引用组件</li><li>官方强烈推荐组件名字母全小写且必须包含一个连字符 如 component-a</li></ul></li><li>template：定义组件的视图模板</li><li>data ：在组件中必须是一个函数</li></ul></blockquote></li><li>注册组件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    components: &#123; <span class="comment">// 局部组件</span></span><br><span class="line">         <span class="string">'component-b'</span>: ComponentB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>使用组件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 通过组件名直接使用, 不能使用驼峰形式 --&gt;</span><br><span class="line">&lt;component-b &gt;<span class="xml"><span class="tag">&lt;/<span class="name">component-b</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="dashboard项目大致思路"><a href="#dashboard项目大致思路" class="headerlink" title="dashboard项目大致思路"></a>dashboard项目大致思路</h2><ul><li>创建vue实例（放进main.js中，index引入即可）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 创建vue实例 --&gt;</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">'#app'</span>,</span><br><span class="line">      components: &#123;</span><br><span class="line">         <span class="comment">//注册模板</span></span><br><span class="line">        AppNavbar   <span class="comment">// ES6 等价于AppNavbar: AppNavbar</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li><li>定义模板(抽取到components文件夹中，index引入即可)<ul><li>以头部组件AppNavbar.js为例 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AppNavbar.js</span></span><br><span class="line"></span><br><span class="line">; (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//用window.来取代const，const定义的不能被外部调用</span></span><br><span class="line">    <span class="built_in">window</span>.AppNavbar = &#123;</span><br><span class="line">        template: <span class="string">` &lt;nav class="navbar navbar-inverse navbar-fixed-top"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="container-fluid"&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="navbar-header"&gt;</span></span><br><span class="line"><span class="string">        &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"</span></span><br><span class="line"><span class="string">          aria-expanded="false" aria-controls="navbar"&gt;</span></span><br><span class="line"><span class="string">          &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;span class="icon-bar"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;span class="icon-bar"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;span class="icon-bar"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;a class="navbar-brand" href="#"&gt;&#123;&#123;projectName&#125;&#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div id="navbar" class="navbar-collapse collapse"&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class="nav navbar-nav navbar-right"&gt;</span></span><br><span class="line"><span class="string">          &lt;li&gt;&lt;a href="#"&gt;Dashboard&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">          &lt;li&gt;&lt;a href="#"&gt;Settings&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">          &lt;li&gt;&lt;a href="#"&gt;Profile&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">          &lt;li&gt;&lt;a href="#"&gt;Help&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;form class="navbar-form navbar-right"&gt;</span></span><br><span class="line"><span class="string">          &lt;input type="text" class="form-control" placeholder="Search..." @blur="search"&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/nav&gt;`</span>,</span><br><span class="line">        data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                projectName: <span class="string">'bootstrap+vue'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            search() &#123;</span><br><span class="line">                alert(<span class="string">'失去焦点'</span>)<span class="comment">//搜索框失去焦点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure></li></ul></li><li>index引入相关模板  </li><li>相应位置添加模板<br><img src="https://i.loli.net/2020/01/18/YGldchTVJMnZoax.png" alt="QQ图片20200118210744.png"></li></ul><h3 id="项目结构极简化"><a href="#项目结构极简化" class="headerlink" title="项目结构极简化"></a>项目结构极简化</h3><ul><li><p>index留一个组件的出口，此处要被子组件替换 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>其余部分全部组件化，由script标签引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意：Dashboard.js 和 HomeList.js 要在 Home.js 前面引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"components/Home/Dashboard.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"components/Home/HomeList.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"components/Home/Home.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"App.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>注意事项</p><blockquote><ul><li>组件可以理解为特殊的 Vue 实例，不需要手动实例化，管理自己的 template 模板</li><li>组件的 template 必须有且只有一个根节点</li><li>组件的 data 选项必须是函数，且函数体返回一个对象</li><li>组件与组件之间是相互独立的，可以配置自己的一些选项资源 data、methods、computed 等等</li><li>思想：组件自己管理自己，不影响别人</li></ul></blockquote></li><li><p>结构图<br><img src="https://i.loli.net/2020/01/18/O9G45WqrBNAMKhF.png" alt="bootstrap-vue组件化结构.png"><br>效果图<br><img src="https://i.loli.net/2020/01/18/xITjbgJci6aQnhK.png" alt="QQ图片20200118214216.png"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vue组件化开发&quot;&gt;&lt;a href=&quot;#vue组件化开发&quot; class=&quot;headerlink&quot; title=&quot;vue组件化开发&quot;&gt;&lt;/a&gt;vue组件化开发&lt;/h2&gt;&lt;p&gt;组件（component） 是 Vue.js 最强大的功能之一。&lt;br&gt;Vue 中的组件化开
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>vue-组件通信</title>
    <link href="http://yoursite.com/2020/02/11/vue/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <id>http://yoursite.com/2020/02/11/vue/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</id>
    <published>2020-02-11T10:17:41.294Z</published>
    <updated>2020-01-20T06:10:07.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="组件间通信规则"><a href="#组件间通信规则" class="headerlink" title="组件间通信规则"></a>组件间通信规则</h2><ol><li>不要在子组件中直接修改父组件传递的数据</li><li>数据初始化时，应当看初始化的数据是否用于多个组件中，如果需要被用于多个组件中，则初始化在父组件<br>中；如果只在一个组件中使用，那就初始化在这个要使用的组件中。</li><li>数据初始化在哪个组件, 更新数据的方法(函数)就应该定义在哪个组件。</li></ol><hr><h1 id="组件间通信方式"><a href="#组件间通信方式" class="headerlink" title="组件间通信方式"></a>组件间通信方式</h1><h2 id="props-父组件向子组件传递数据"><a href="#props-父组件向子组件传递数据" class="headerlink" title="props 父组件向子组件传递数据"></a>props 父组件向子组件传递数据</h2><ul><li>在声明组件对象中使用 props 选项指定<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MyComponent = &#123;</span><br><span class="line">    template: <span class="string">'&lt;div&gt;&lt;/div&gt;'</span>,</span><br><span class="line">    props: <span class="comment">//此处值有以下3种方式,</span></span><br><span class="line">    components: &#123;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>方式1：指定传递属性名，注意是 数组形式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">props: [<span class="string">'id'</span>,<span class="string">'name'</span>，<span class="string">'salary'</span>, <span class="string">'isPublished'</span>, <span class="string">'commentIds'</span>, <span class="string">'author'</span>, <span class="string">'getEmp'</span>]</span><br></pre></td></tr></table></figure>方式2：指定传递属性名和数据类型，注意是 对象形式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    id: <span class="built_in">Number</span>,</span><br><span class="line">    name: <span class="built_in">String</span>,</span><br><span class="line">    salary: <span class="built_in">Number</span>,</span><br><span class="line">    isPublished: <span class="built_in">Boolean</span>,</span><br><span class="line">    commentIds: <span class="built_in">Array</span>,</span><br><span class="line">    author: <span class="built_in">Object</span>,</span><br><span class="line">    getEmp: <span class="built_in">Function</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>方式3：指定属性名、数据类型、必要性、默认值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">name: &#123;</span><br><span class="line">type: <span class="built_in">String</span>,</span><br><span class="line">required: <span class="literal">true</span>,</span><br><span class="line"><span class="keyword">default</span>: <span class="string">'mxg'</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>引用组件时动态赋值<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">my-component</span> <span class="attr">v-bind:id</span>=<span class="string">"2"</span> <span class="attr">:name</span>=<span class="string">"meng"</span> <span class="attr">:salary</span>=<span class="string">"9999"</span> <span class="attr">:is-published</span>=<span class="string">"true"</span> <span class="attr">:commentids</span>=<span class="string">"[1, 2]"</span> <span class="attr">:author</span>=<span class="string">"&#123;name: 'alan'&#125;"</span> <span class="attr">:get-emp</span>=<span class="string">"getEmp"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>传递数据注意</li></ul><ol><li>props 只用于父组件向子组件传递数据</li><li>所有标签属性都会成为组件对象的属性, 模板页面可以直接引用</li><li>问题  <ul><li>如果需要向非子后代传递数据，必须多层逐层传递</li><li>兄弟组件间也不能直接 props 通信, 必须借助父组件才可以</li></ul></li></ol><hr><h2 id="emit-自定义事件"><a href="#emit-自定义事件" class="headerlink" title="$emit 自定义事件"></a>$emit 自定义事件</h2><p>作用：通过 自定义事件 来代替 props 传入函数形式</p><ul><li>绑定自定义事件<br>在父组件中定义事件监听函数，并引用子组件标签上 v-on 绑定事件监听。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    // 通过 v-on 绑定</span><br><span class="line">// @自定义事件名=事件监听函数</span><br><span class="line">// 在子组件 dashboard 中触发 delete_hobby 事件来调用 deleteHobby 函数</span><br><span class="line"><span class="tag">&lt;<span class="name">dashboard</span> @<span class="attr">delete_hobby</span>=<span class="string">"deleteHobby"</span>&gt;</span><span class="tag">&lt;/<span class="name">dashboard</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>触发监听事件函数执行<br>在子组件中触发父组件的监听事件函数调用<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 子组件触发事件函数调用</span></span><br><span class="line"><span class="comment">// this.$emit(自定义事件名, data)</span></span><br><span class="line"><span class="keyword">this</span>.$emit(<span class="string">'delete_emp'</span>, index)</span><br></pre></td></tr></table></figure></li><li>自定义事件注意</li></ul><ol><li>自定义事件只用于子组件向父组件发送消息(数据)</li><li>隔代组件或兄弟组件间通信此种方式不合适<h2 id="slot-插槽分发内容"><a href="#slot-插槽分发内容" class="headerlink" title="slot 插槽分发内容"></a>slot 插槽分发内容</h2>作用: 主要用于父组件向子组件传递 标签+数据 , （而上面prop和自定事件只是传递数据）<br>场景：一般是某个位置需要经常动态切换显示效果（如饿了么）下图所示<br><img src="https://i.loli.net/2020/01/19/EKripjOLw2kJCS5.png" alt="QQ图片20200119193236.png">  </li></ol><ul><li>子组件定义插槽<br>在子组件中定义插槽, 当父组件向指定插槽传递标签数据后, 插槽处就被渲染，否则插槽处不会被渲染.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name属性值指定唯一插槽名，父组件通过此名指定标签数据--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"aaa"</span>&gt;</span>不确定的标签结构 1<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>组件确定的标签结构<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"bbb"</span>&gt;</span>不确定的标签结构 2<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>父组件传递标签数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;child&gt;</span><br><span class="line">    &lt;!--slot属性值对应子组件中的插槽的name属性值--&gt;</span><br><span class="line">    &lt;div slot=<span class="string">"aaa"</span>&gt;向 name=aaa 的插槽处插入此标签数据&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div slot="bbb"&gt;向 name=bbb 的插槽处插入此标签数据&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/child&gt;</span></span><br></pre></td></tr></table></figure></li><li>插槽注意事项</li></ul><ol><li>只能用于父组件向子组件传递 标签+数据</li><li>传递的插槽标签中的数据处理都需要定义所在父组件中</li></ol><h2 id="非父子组件间通信PubSubJS库"><a href="#非父子组件间通信PubSubJS库" class="headerlink" title="非父子组件间通信PubSubJS库"></a>非父子组件间通信PubSubJS库</h2><p>Vue.js可通过PubSubJs库来实现非父子组件之间的通信，使用 PubsubJS的消息发布与订阅模<br>据的传递。<br>理解:订阅信息==== 绑定事件监听, 发布消息====触发事件。<br>注意:但是必须先执行订阅事件subscribe , 然后才能publish发布事件。</p><ul><li>订阅消息（绑定事件监听）<br>先在created钩子函数中订阅消息<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;                     <span class="comment">//event接收的是消息名称，data接收发布时传递的数据</span></span><br><span class="line">          PubSub.subscribe(<span class="string">'消息名称（事件名）'</span>, (event,data) =&gt; &#123; <span class="comment">//箭头函数</span></span><br><span class="line">              <span class="comment">//事件回调处理</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure></li><li>发布消息（触发事件）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PubSub.publish( <span class="string">'消息名称（事件名）'</span>,data)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;组件间通信规则&quot;&gt;&lt;a href=&quot;#组件间通信规则&quot; class=&quot;headerlink&quot; title=&quot;组件间通信规则&quot;&gt;&lt;/a&gt;组件间通信规则&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;不要在子组件中直接修改父组件传递的数据&lt;/li&gt;
&lt;li&gt;数据初始化时，应当看初始化的数
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue，bootstrap" scheme="http://yoursite.com/tags/vue%EF%BC%8Cbootstrap/"/>
    
  </entry>
  
  <entry>
    <title>msm会员系统---加载loading+异常响应</title>
    <link href="http://yoursite.com/2020/02/09/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F----%E5%8A%A0%E8%BD%BDloading+%E5%BC%82%E5%B8%B8%E5%93%8D%E5%BA%94/"/>
    <id>http://yoursite.com/2020/02/09/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F----%E5%8A%A0%E8%BD%BDloading+%E5%BC%82%E5%B8%B8%E5%93%8D%E5%BA%94/</id>
    <published>2020-02-08T16:00:00.000Z</published>
    <updated>2020-02-09T05:08:57.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作用：加载数据时-实现加载中动效-提高用户体验度"><a href="#作用：加载数据时-实现加载中动效-提高用户体验度" class="headerlink" title="作用：加载数据时, 实现加载中动效, 提高用户体验度"></a>作用：加载数据时, 实现加载中动效, 提高用户体验度</h1><h2 id="按需导入-ElementUI-组件-Loading-Message"><a href="#按需导入-ElementUI-组件-Loading-Message" class="headerlink" title="按需导入 ElementUI 组件 Loading , Message"></a>按需导入 ElementUI 组件 Loading , Message</h2><pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按需导入 ElementUI 组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; Loading, Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="加载数据时，-打开和关闭动效-对象"><a href="#加载数据时，-打开和关闭动效-对象" class="headerlink" title="加载数据时， 打开和关闭动效 对象"></a>加载数据时， 打开和关闭动效 对象</h2><p>注意： loadingInstance 实例采用单例模式创建，防止响应异常时频繁切换路由时加载动效重复创建  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">// 加载数据时打开和关闭动效对象</span></span><br><span class="line">        <span class="keyword">const</span> loading = &#123;</span><br><span class="line">            loadingInstance: <span class="literal">null</span>, <span class="comment">// Loading实例</span></span><br><span class="line">            open: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 打开加载</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'加载中'</span>, <span class="keyword">this</span>.loadingInstance)</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.loadingInstance === <span class="literal">null</span>) &#123; <span class="comment">// 创建单例, 防止切换路由重复加载</span></span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'创建加载实例..'</span>)</span><br><span class="line">                    <span class="keyword">this</span>.loadingInstance = Loading.service(&#123;</span><br><span class="line">                        text: <span class="string">'拼命加载中'</span>,</span><br><span class="line">                        target: <span class="string">'.main'</span>, <span class="comment">// 效果显示区域</span></span><br><span class="line">                        background: <span class="string">'rgba(0, 0, 0, 0.5)'</span>, <span class="comment">// 加载效果</span></span><br><span class="line">                        spinner: <span class="string">'el-icon-loading'</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            close: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 关闭加载</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.loadingInstance !== <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.loadingInstance.close()</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'结束加载'</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.loadingInstance = <span class="literal">null</span> <span class="comment">// 关闭后实例重新赋值null, 下次让它重新创建</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">~~~  </span><br><span class="line">## 请求拦截器中打开加载效果, 响应拦截器和异常中关闭加载效果.</span><br><span class="line">    ~~~js</span><br><span class="line">        <span class="comment">// 请求拦截器</span></span><br><span class="line">        request.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">            loading.open() <span class="comment">// 打开加载效果</span></span><br><span class="line">            <span class="keyword">return</span> config</span><br><span class="line">        &#125;, error =&gt; &#123;</span><br><span class="line">            <span class="comment">// 出现异常</span></span><br><span class="line">            loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 响应拦截器</span></span><br><span class="line">        request.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        &#125;, error =&gt; &#123;</span><br><span class="line">            loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h1 id="msm-src-utils-request-js完整代码"><a href="#msm-src-utils-request-js完整代码" class="headerlink" title="msm\src\utils\request.js完整代码"></a>msm\src\utils\request.js完整代码</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span></span><br><span class="line"><span class="comment">// 按需导入 ElementUI 组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; Loading, Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">// 加载数据时打开和关闭动效对象</span></span><br><span class="line"><span class="keyword">const</span> loading = &#123;</span><br><span class="line">    loadingInstance: <span class="literal">null</span>, <span class="comment">// Loading实例</span></span><br><span class="line">    open: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 打开加载</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'加载中'</span>, <span class="keyword">this</span>.loadingInstance)</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.loadingInstance === <span class="literal">null</span>) &#123; <span class="comment">// 创建单例, 防止切换路由重复加载</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'创建加载实例..'</span>)</span><br><span class="line">            <span class="keyword">this</span>.loadingInstance = Loading.service(&#123;</span><br><span class="line">                text: <span class="string">'拼命加载中'</span>,</span><br><span class="line">                target: <span class="string">'.main'</span>, <span class="comment">// 效果显示区域</span></span><br><span class="line">                background: <span class="string">'rgba(0, 0, 0, 0.5)'</span>, <span class="comment">// 加载效果</span></span><br><span class="line">                spinner: <span class="string">'el-icon-loading'</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    close: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 关闭加载</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.loadingInstance !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.loadingInstance.close()</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'结束加载'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.loadingInstance = <span class="literal">null</span> <span class="comment">// 关闭后实例重新赋值null, 下次让它重新创建</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动创建一个 axios 对象, 参考: https://github.com/axios/axios#creating-an-instance</span></span><br><span class="line"><span class="keyword">const</span> request = axios.create(&#123;</span><br><span class="line">    <span class="comment">// 请求配置参考: https://github.com/axios/axios#request-config</span></span><br><span class="line">    <span class="comment">// 根据不同环境设置 baseURL, 最终发送请求时的URL为: baseURL + 发送请求时写URL ,</span></span><br><span class="line">    <span class="comment">// 比如 get('/test'), 最终发送请求是: /dev-api/test</span></span><br><span class="line">    <span class="comment">// baseURL: '/dev-api',</span></span><br><span class="line">    <span class="comment">// baseURL: '/',</span></span><br><span class="line">    <span class="comment">// 根目录下的 .env.development 与 .env.production 中配置 VUE_APP_BASE_API</span></span><br><span class="line">    baseURL: process.env.VUE_APP_BASE_API, <span class="comment">// "/dev-api"</span></span><br><span class="line">    timeout: <span class="number">5000</span> <span class="comment">// 请求超时</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">request.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    loading.open() <span class="comment">// 打开加载效果</span></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">&#125;, error =&gt; &#123;</span><br><span class="line">    <span class="comment">// 出现异常</span></span><br><span class="line">    loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">request.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line">&#125;, error =&gt; &#123;</span><br><span class="line">    loading.close() <span class="comment">// 关闭加载效果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request <span class="comment">// 导出 axios 对象</span></span><br></pre></td></tr></table></figure><h1 id="异常响应"><a href="#异常响应" class="headerlink" title="异常响应"></a>异常响应</h1><p>请求接口超时，应该EasyMock服务接口不稳定<br>一般都是在请求后台服务接口时会出现异常，而请求服务接口都是通过 axios 发送的请求，所以可在 axios 响应拦<br>截器进行统一处理。</p><ol><li><p>检查 Message 组件是导入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Loading, Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br></pre></td></tr></table></figure></li><li><p>在 axios 响应拦截器中处理异常</p><pre><code class="js"><span class="comment">// 响应拦截器</span>request.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> { loading.close() <span class="comment">// 关闭加载效果</span> <span class="comment">// 如果后台响应状态码不是 2000 , 说明后台服务有异常,统一可在此处处理</span> <span class="keyword">const</span> resp = response.data <span class="keyword">if</span> (resp.code !== <span class="number">2000</span>) {     Message({         message: res.message || <span class="string">'系统异常'</span>,         type: <span class="string">'warning'</span>,         duration: <span class="number">5</span> * <span class="number">1000</span> <span class="comment">// 停留时长</span>     }) } <span class="keyword">return</span> response}, error =&gt; { loading.close() <span class="comment">// 关闭加载效果</span> <span class="comment">// 当请求接口出错时, 进行弹出错误提示, 如 404, 500, 请求超时</span> <span class="built_in">console</span>.log(<span class="string">'response error'</span>, error.response.status) Message({     message: error.message,     type: <span class="string">'error'</span>,     duration: <span class="number">5</span> * <span class="number">1000</span> }) <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);})</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;作用：加载数据时-实现加载中动效-提高用户体验度&quot;&gt;&lt;a href=&quot;#作用：加载数据时-实现加载中动效-提高用户体验度&quot; class=&quot;headerlink&quot; title=&quot;作用：加载数据时, 实现加载中动效, 提高用户体验度&quot;&gt;&lt;/a&gt;作用：加载数据时, 实现
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="ElementUI" scheme="http://yoursite.com/tags/ElementUI/"/>
    
      <category term="Mock.js" scheme="http://yoursite.com/tags/Mock-js/"/>
    
  </entry>
  
  <entry>
    <title>vuex版msm会员管理系统</title>
    <link href="http://yoursite.com/2020/02/09/msm/vuex--msm/"/>
    <id>http://yoursite.com/2020/02/09/msm/vuex--msm/</id>
    <published>2020-02-08T16:00:00.000Z</published>
    <updated>2020-02-10T15:32:22.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要重构地方"><a href="#主要重构地方" class="headerlink" title="主要重构地方"></a>主要重构地方</h1><ul><li><p>登录</p></li><li><p>获取用户信息</p></li><li><p>退出</p><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1></li><li><p>登录与 token 状态管理</p><ol><li>在 src\utils\ 目录下创建 auth.js， 封装 token 和 用户信息工具模块<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TOKEN_KEY = <span class="string">'msm-token'</span></span><br><span class="line"><span class="keyword">const</span> USER_KEY = <span class="string">'msm-user'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 token </span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> localStorage.getItem(TOKEN_KEY)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 保存 token</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setToken</span>(<span class="params">token</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> localStorage.setItem(TOKEN_KEY, token)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getUser</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(localStorage.getItem(USER_KEY))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setUser</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">    localStorage.setItem(USER_KEY, <span class="built_in">JSON</span>.stringify(user))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//移除用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">removeToken</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    localStorage.removeItem(TOKEN_KEY)</span><br><span class="line">    localStorage.removeItem(USER_KEY)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 src 目录下新建 store\modules 目录，modules 下创建 user.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getToken, setToken, setUser, getUser, removeToken &#125; <span class="keyword">from</span> <span class="string">'@/utils/auth'</span></span><br><span class="line"><span class="keyword">import</span> &#123; login, getUserInfo, logout &#125; <span class="keyword">from</span> <span class="string">'@/api/login'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">        token: <span class="literal">null</span>,</span><br><span class="line">        user: <span class="literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line">        SET_TOKEN(state, token) &#123;</span><br><span class="line">            state.token = token</span><br><span class="line">            setToken(token)</span><br><span class="line">        &#125;,</span><br><span class="line">        SET_USER(state, user) &#123;</span><br><span class="line">            state.user = user</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        <span class="comment">// 登录</span></span><br><span class="line">        Login(&#123; commit &#125;, form) &#123;</span><br><span class="line">            <span class="comment">// 提交表单给后台进行验证是否正确</span></span><br><span class="line">            <span class="comment">// resolve 触发成功处理，reject 触发异常处理</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                login(form.username.trim(), form.password).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> resp = response.data</span><br><span class="line">                    commit(<span class="string">'SET_TOKEN'</span>, resp.data.token)</span><br><span class="line">                    resolve(resp)</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    reject(error)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> user</span><br><span class="line">~~~ </span><br><span class="line"><span class="number">3.</span> 在 src\store 目录下创建 index.js</span><br><span class="line">~~~js</span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">'./modules/user'</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">    <span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    modules: &#123;</span><br><span class="line">    user</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure></li><li>修改 src 下的 main.js，导入和注册 store<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...省略</span><br><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./permission'</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    router,</span><br><span class="line">    store, <span class="comment">// 注册</span></span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure></li><li>重构登录组件 views\login\index.vue<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> methods: &#123;</span><br><span class="line">    submitForm(formName) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">        <span class="keyword">const</span> pro = <span class="keyword">this</span>.$store.dispatch(<span class="string">"Login"</span>, <span class="keyword">this</span>.form).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'response.flag'</span>,response.flag)</span><br><span class="line">            <span class="keyword">if</span> (response.flag) &#123;</span><br><span class="line">                <span class="comment">//前往首页</span></span><br><span class="line">                <span class="keyword">this</span>.$router.push(<span class="string">"/"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">                message: response.message,</span><br><span class="line">                type: <span class="string">"warning"</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"验证失败"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>测试登录是否正常进入，并观察浏览器中localStorage是否有值</li></ol></li><li><p>解决刷新页面回到登录页面<br>  当前在 permission.js 路由拦截中是通过浏览器 localStorage 获取 token 值，但现在使用的Vuex状态管理，那我<br>  们希望通过 store 来获取 token 状态值.</p><ol><li>在 src\permission.js 中将获取 token 方式替换为从 store 状态中获取，  如下：<br>注意要 import 导入 store<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">。。。</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span> , next</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 1. 获取token</span></span><br><span class="line"><span class="comment">// const token = localStorage.getItem('mxg-msm-token')</span></span><br><span class="line"><span class="keyword">const</span> token = store.state.user.token</span><br><span class="line">。。。</span><br></pre></td></tr></table></figure></li><li>重新访问登录 <a href="http://localhost:8888/#/login" target="_blank" rel="noopener">http://localhost:8888/#/login</a> ，登录后一样可以进入首页</li><li>刷新首页，发现会回到登录页面。因为刷新 后token状态值还原初始值 null, 所以又会要求 重新登录</li><li>解决刷新页面重新登录的问题，在 src\store\modules\user.js 中 token 初始值为 getToken()<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;getToken, setToken, setUser, getUser, removeToken&#125; <span class="keyword">from</span> <span class="string">'@/utils/auth'</span></span><br><span class="line"><span class="keyword">import</span> &#123; login, getUserInfo, logout&#125; <span class="keyword">from</span> <span class="string">'@/api/login'</span></span><br><span class="line">    <span class="keyword">const</span> user = &#123;</span><br><span class="line">    state: &#123;</span><br><span class="line">    token: getToken(), <span class="comment">// getToken() 作为token初始值，解决刷新页面之后token为null</span></span><br><span class="line">    user: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line">。。。</span><br><span class="line">。。。</span><br></pre></td></tr></table></figure><h1 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h1>之前获取用户信息是在登录中一起获取的，其实可以在权限拦截器（ permission.js ）中进行获取就行。  </li></ol></li></ul><ol><li>修改 src\store\modules\user.js， 在 actions 中添加 GetUserInfo 方法 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过token获取用户信息</span></span><br><span class="line">    GetUserInfo(&#123; commit, state &#125;) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            getUserInfo(state.token).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> respUser = response.data</span><br><span class="line">                commit(<span class="string">'SET_USER'</span>, respUser.data)</span><br><span class="line">                resolve(respUser)</span><br><span class="line">            &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                reject(error)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></li><li>修改 src\permission.js ， 从 store 中获取用户数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 获取token</span></span><br><span class="line">    <span class="comment">// const token = localStorage.getItem('mxg-msm-token')</span></span><br><span class="line">    <span class="keyword">const</span> token = store.state.user.token</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'token'</span>, token)</span><br><span class="line">    <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">        <span class="comment">// 1.1 如果没有获取到，</span></span><br><span class="line">        <span class="comment">// 要访问非登录页面，则不让访问，加到登录页面 /login</span></span><br><span class="line">        <span class="keyword">if</span> (to.path !== <span class="string">'/login'</span>) &#123;</span><br><span class="line">            next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 请求登录页面 /login</span></span><br><span class="line">            next()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 1.2 获取到token,</span></span><br><span class="line">        <span class="comment">// 1.2.1 请求路由 /login ，那就去目标路由</span></span><br><span class="line">        <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) &#123;</span><br><span class="line">            next()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 1.2.2 请求路由非登录页面，先在本地查看是否有用户信息，</span></span><br><span class="line">            <span class="comment">// const userInfo = localStorage.getItem('mxg-msm-user')</span></span><br><span class="line">            <span class="keyword">const</span> userInfo = store.state.user.user</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'userInfo'</span>, userInfo)</span><br><span class="line">            <span class="keyword">if</span> (userInfo) &#123;</span><br><span class="line">                <span class="comment">// 本地获取到，则直接让它去目标路由</span></span><br><span class="line">                next()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'获取用户信息'</span>)</span><br><span class="line">                <span class="comment">// 如果本地没有用户信息， 就通过token去获取用户信息，</span></span><br><span class="line">                store.dispatch(<span class="string">'GetUserInfo'</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (response.flag) &#123;</span><br><span class="line">                        next()</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        next(&#123; <span class="attr">path</span>: <span class="string">'/login'</span> &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>测试， 当登录后，查看localstorage 中有用户数据和 token</li></ol><h1 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h1><ol><li>修改 src\store\modules\user.js， 在 actions 中添加 Logout 方法 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 退出</span></span><br><span class="line">Logout(&#123; commit, state &#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        logout(state.token).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> resp = response.data</span><br><span class="line">            commit(<span class="string">'SET_TOKEN'</span>, <span class="string">''</span>)</span><br><span class="line">            commit(<span class="string">'SET_USER'</span>, <span class="literal">null</span>)</span><br><span class="line">            removeToken()</span><br><span class="line">            resolve(resp)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            reject(error)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改 src\components\AppHeader\index.vue 头部组件,<ul><li>修改 data 选项中的 user 属性值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="comment">// user: JSON.parse(localStorage.getItem('mxg-msm-user')),</span></span><br><span class="line">user: <span class="keyword">this</span>.$store.state.user.user,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改 methods 选项中的 handleLogout 方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出系统</span></span><br><span class="line">    handlelogout() &#123;</span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">"Logout"</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (response.flag) &#123;</span><br><span class="line">        <span class="comment">// 退出成功</span></span><br><span class="line">        <span class="comment">// 回到登录页面</span></span><br><span class="line">        <span class="keyword">this</span>.$router.push(<span class="string">"/login"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">            message: resp.message,</span><br><span class="line">            type: <span class="string">"warning"</span>,</span><br><span class="line">            duration: <span class="number">500</span> <span class="comment">// 弹出停留时间</span></span><br><span class="line">        &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li>测试 右上角显示名字正常, 退出正常</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;主要重构地方&quot;&gt;&lt;a href=&quot;#主要重构地方&quot; class=&quot;headerlink&quot; title=&quot;主要重构地方&quot;&gt;&lt;/a&gt;主要重构地方&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;登录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取用户信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;退
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="vuex" scheme="http://yoursite.com/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>vuex状态管理</title>
    <link href="http://yoursite.com/2020/02/09/vue/vuex/"/>
    <id>http://yoursite.com/2020/02/09/vue/vuex/</id>
    <published>2020-02-08T16:00:00.000Z</published>
    <updated>2020-02-10T05:28:18.510Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vuex-概述"><a href="#Vuex-概述" class="headerlink" title="Vuex 概述"></a>Vuex 概述</h1><ol><li>官方文档：<a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener">https://vuex.vuejs.org/zh/</a><br> Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状<br> 态，并以相应的规则保证状态以一种可预测的方式发生变化。</li><li>Vuex简单理解：<ul><li>Vue 应用中的每个组件在 data() 中封装着自己数据属性，而这些 data 属性都是私有的，完全隔离的。</li><li>如果我们希望多个组件都能读取到同一状态数据属性，或者不同组件的行为需要更新同一状态数据属性，<br>这就需要一个将共享的状态数据属性进行集中式的管理。</li><li>这就是 Vuex 状态管理所要解决的问题。<h1 id="Vuex-入门实战"><a href="#Vuex-入门实战" class="headerlink" title="Vuex 入门实战"></a>Vuex 入门实战</h1><h2 id="安装依赖和运行"><a href="#安装依赖和运行" class="headerlink" title="安装依赖和运行"></a>安装依赖和运行</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 进入工程目录</span><br><span class="line">cd vuex-demo</span><br><span class="line"># 安装依赖</span><br><span class="line">npm install --save vuex</span><br><span class="line"># 运行项目</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><h2 id="读取状态值-state"><a href="#读取状态值-state" class="headerlink" title="读取状态值 state"></a>读取状态值 state</h2></li></ul></li></ol><ul><li><p>理解</p><blockquote><p>每一个 Vuex 项目的核心就是 store（仓库）。 store 就是一个对象，它包含着你的项目中大部分的状态(state)。<br>state 是 store 对象中的一个选项，是 Vuex 管理的状态对象（共享的数据属性）</p></blockquote></li><li><p>实操</p><ol><li>在 src 目录下创建 store 目录，store 下创建 index.js 文件， 编码如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="comment">// 引入 Vuex 插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123; <span class="comment">// 注意V 和 S都是大写字母</span></span><br><span class="line">    <span class="comment">// 存放状态（共享属性）</span></span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure></li></ol></li><li><p>修改 main.js，导入和注册 store</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="comment">// 导入的是 src/store/index.js</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    router,</span><br><span class="line">    store, <span class="comment">// 注册</span></span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure></li><li><p>组件中读取 state 状态数据，修改 src\views\Home.vue</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        count: &#123;&#123; $store.state.count &#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>访问 <a href="http://localhost:8080/#/" target="_blank" rel="noopener">http://localhost:8080/#/</a> 页面显示 count: 1</p><h2 id="改变状态值-mutation"><a href="#改变状态值-mutation" class="headerlink" title="改变状态值 mutation"></a>改变状态值 mutation</h2></li><li><p>理解</p><ol><li>在 store 的 mutations 选项中定义方法，才可以改变状态值。</li><li>在通过 $store.commit(‘mutationName’) 触发状态值的改变</li></ol></li><li><p>实操</p><ol><li>修改 store/index.js , 在 store 中添加 mutations 选项，编码如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="comment">// 引入 Vuex 插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123; <span class="comment">// 注意V 和 S都是大写字母</span></span><br><span class="line">    <span class="comment">// 存放状态（共享属性）</span></span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//改变state状态值</span></span><br><span class="line">    mutations: &#123;</span><br><span class="line">    <span class="comment">//加法</span></span><br><span class="line">    increment(state) &#123;</span><br><span class="line">        state.count ++</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//减法</span></span><br><span class="line">    decrement(state) &#123;</span><br><span class="line">        state.count--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><ol start="2"><li>修改 src\views\Home.vue ，调用 mutations 中 increment、decrement 方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"home"</span>&gt;</span><br><span class="line">    count:&#123;&#123;$store.state.count&#125;&#125;</span><br><span class="line">    &lt;button @click=<span class="string">"addCount"</span>&gt;加法&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button @click="decrement"&gt;减法&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//加法</span></span><br><span class="line">    addCount() &#123;</span><br><span class="line">    <span class="comment">//获取状态值</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$store.state.count);</span><br><span class="line">    <span class="keyword">this</span>.$store.commit(<span class="string">"increment"</span>,<span class="number">10</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//减法</span></span><br><span class="line">    decrement() &#123;</span><br><span class="line">    <span class="comment">// 通过commit 调用 mutations 中的 decrement 改变状态值</span></span><br><span class="line">    <span class="keyword">this</span>.$store.commit(<span class="string">"decrement"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ul><ol start="3"><li>访问： 点击 加法 按钮，控制台和页面显示数字变化<h2 id="提交载荷"><a href="#提交载荷" class="headerlink" title="提交载荷"></a>提交载荷</h2> 你可以向 $store.commit 传入额外的参数，即 mutation 的 载荷（payload）：  </li></ol><ul><li>修改 src\store 下的 index.js  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// ...</span></span><br><span class="line">mutations: &#123;</span><br><span class="line">    increment (state, n) &#123; <span class="comment">// n 为载荷</span></span><br><span class="line">    state.count += n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure></li><li>修改 views\Home.vue 组件  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//加法</span></span><br><span class="line">addCount() &#123;</span><br><span class="line">  <span class="comment">//获取状态值</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.$store.state.count);</span><br><span class="line">  <span class="keyword">this</span>.$store.commit(<span class="string">"increment"</span>,<span class="number">10</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2></li><li>理解<br>  Action 类似于 mutation，不同在于：  <ul><li>Action 提交的是 mutation，而不是在组件中直接变更状态， 通过它间接更新 state。</li><li>在组件中通过 this.$store.dispatch(‘actionName’) 触发状态值间接改变</li><li>Action 也支持载荷</li><li>Action 可以包含任意异步操作。</li></ul></li><li>实操<ol><li>修改 store/index.js ，增加 actions 选项<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">actions: &#123;</span><br><span class="line">    add(context, n) &#123;</span><br><span class="line">        <span class="comment">// 触发 mutations 中的 increment 改变 state</span></span><br><span class="line">        context.commit(<span class="string">'increment'</span>, n)</span><br><span class="line">    &#125;,</span><br><span class="line">    decrement(&#123; commit, state &#125;) &#123; <span class="comment">// 按需传值</span></span><br><span class="line">        commit(<span class="string">'decrement'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改 views\Home.vue, 触发 action 改变值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  methods: &#123;</span><br><span class="line">  <span class="comment">//加法</span></span><br><span class="line">  addCount() &#123;</span><br><span class="line">    <span class="comment">// 获取状态值</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$store.state.count);</span><br><span class="line">    <span class="comment">// 通过commit 调用 mutations 中的 increment 改变状态值</span></span><br><span class="line">    <span class="comment">// this.$store.commit('increment')</span></span><br><span class="line">    <span class="comment">// this.$store.commit('increment', 10) // 提交载荷</span></span><br><span class="line">    <span class="comment">// 触发 actions 中的 add 改变状态值</span></span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">"add"</span>, <span class="number">10</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  decrement() &#123;</span><br><span class="line">    <span class="comment">// this.$store.commit('decrement')</span></span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">"decrement"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="派生属性-getter"><a href="#派生属性-getter" class="headerlink" title="派生属性 getter"></a>派生属性 getter</h2></li></ol></li><li>理解<ul><li>有时候我们需要从 store 中的 state 中派生出一些状态。<br>例如：基于上面代码，增加一个 desc 属性，当 count 值小于 50，则 desc 值为 吃饭 ; 大于等于 50 小于<br>100，则desc 值为 睡觉 ; 大于100 , 则 desc 值为 打豆豆 。这时我们就需要用到 getter 为我们解决。  </li><li>getter 其实就类似于计算属性(get)的对象.</li><li>组件中读取 $store.getters.xxx</li></ul></li><li>实操</li></ul><ol><li>修改 store\index.js ,增加 getters 选项<br> 注意：getters 中接受 state 作为其第一个参数，也可以接受其他 getter 作为第二个参数 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//派生属性</span></span><br><span class="line">getters: &#123;</span><br><span class="line">    desc(state) &#123;</span><br><span class="line">        <span class="keyword">if</span> (state.count &lt; <span class="number">50</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'吃饭'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.count &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'睡觉'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'打豆豆'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工程模块化"><a href="#工程模块化" class="headerlink" title="工程模块化"></a>工程模块化</h2></li></ol><ul><li>Module<br>  由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。<br>  当应用变得非常复杂时，store 对象就有可能变得相当臃肿。<br>  为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。<br>  每个模块拥有自己的 state、mutation、action、getter 等，参见以下代码模型      <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleA = &#123;</span><br><span class="line">state: &#123; ... &#125;,</span><br><span class="line">mutations: &#123; ... &#125;,</span><br><span class="line">actions: &#123; ... &#125;,</span><br><span class="line">getters: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> moduleB = &#123;</span><br><span class="line">state: &#123; ... &#125;,</span><br><span class="line">mutations: &#123; ... &#125;,</span><br><span class="line">actions: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">modules: &#123;</span><br><span class="line">a: moduleA,</span><br><span class="line">b: moduleB</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">store.state.a <span class="comment">// -&gt; moduleA 的状态</span></span><br><span class="line">store.state.b <span class="comment">// -&gt; moduleB 的状态</span></span><br></pre></td></tr></table></figure></li><li>工程模块化进行改造<ol><li>修改 store\index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="comment">// 引入 Vuex 插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">const</span> home = &#123;</span><br><span class="line">    <span class="comment">// 存放状态（共享属性）</span></span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//派生属性</span></span><br><span class="line">    getters: &#123;</span><br><span class="line">        desc(state) &#123;</span><br><span class="line">            <span class="keyword">if</span> (state.count &lt; <span class="number">50</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'吃饭'</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.count &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'睡觉'</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'打豆豆'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 改变 state 状态</span></span><br><span class="line">    mutations: &#123;</span><br><span class="line">        increment(state, n) &#123; <span class="comment">// n 为载荷</span></span><br><span class="line">            <span class="comment">// state.count ++</span></span><br><span class="line">            state.count += n</span><br><span class="line">        &#125;,</span><br><span class="line">        decrement(state) &#123;</span><br><span class="line">            state.count--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        add(context) &#123;</span><br><span class="line">            <span class="comment">// 触发 mutations 中的 increment 改变 state</span></span><br><span class="line">            context.commit(<span class="string">'increment'</span>, <span class="number">10</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        decrement(&#123; commit, state &#125;) &#123; <span class="comment">// 按需传值</span></span><br><span class="line">            commit(<span class="string">'decrement'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123; <span class="comment">// 注意V 和 S都是大写字母</span></span><br><span class="line">    modules: &#123;</span><br><span class="line">        home <span class="comment">// home: home</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure></li><li>修改 Home.vue<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;!--修改部分--&gt;</span><br><span class="line">    count: &#123;&#123; $store.state.home.count &#125;&#125;</span><br><span class="line">    &lt;button @click=<span class="string">"addCount"</span>&gt;加法&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button @click="decrement"&gt;减法&lt;/</span>button&gt;</span><br><span class="line">    派生属性desc: &#123;&#123; $store.getters.desc &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">    addCount() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$store.state.home.count);</span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">"add"</span>, <span class="number">10</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    decrement() &#123;</span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">"decrement"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>修改 About.vue<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"about"</span>&gt;</span><br><span class="line">    About: &#123;&#123; $store.state.home.count &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">~</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="Module模块化项目结构"><a href="#Module模块化项目结构" class="headerlink" title="Module模块化项目结构"></a>Module模块化项目结构</h2><ul><li>标准项目结构<br>  参考<br> 如果所有的状态都写在一个 js 中，这个 js 必定会很臃肿，Vuex 并不限制你的代码结构。但是它建议按以下代码<br> 结构来构建项目结构: <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">├── index.html</span><br><span class="line">├── main.js</span><br><span class="line">├── api</span><br><span class="line">│ └── ... # 抽取出API请求</span><br><span class="line">├── components</span><br><span class="line">│ ├── App.vue</span><br><span class="line">│ └── ...</span><br><span class="line">└── store</span><br><span class="line">├── index.js # 我们组装模块并导出 store 的地方</span><br><span class="line">├── actions.js # 根级别的 action</span><br><span class="line">├── mutations.js # 根级别的 mutation</span><br><span class="line">└── modules</span><br><span class="line">├── cart.js # 购物车模块</span><br><span class="line">└── products.js # 产品模块</span><br></pre></td></tr></table></figure></li><li>重构项目结构<ol><li>在 store下创建 modules 目录，该目录下创建 home.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">count: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> getters =&#123;</span><br><span class="line">desc(state) &#123;</span><br><span class="line">    <span class="keyword">if</span>(state.count &lt; <span class="number">50</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">'吃饭'</span></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(state.count &lt; <span class="number">100</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">'睡觉'</span></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">'打豆豆'</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">increment(state, n) &#123; <span class="comment">// n 为载荷</span></span><br><span class="line">    <span class="comment">// state.count ++</span></span><br><span class="line">    state.count += n</span><br><span class="line">&#125;,</span><br><span class="line">decrement(state) &#123;</span><br><span class="line">    state.count --</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    add(context) &#123;</span><br><span class="line">    <span class="comment">// 触发 mutations 中的 increment 改变 state</span></span><br><span class="line">    context.commit(<span class="string">'increment'</span>, <span class="number">10</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">decrement(&#123;commit, state&#125;) &#123; <span class="comment">// 按需传值</span></span><br><span class="line">    commit(<span class="string">'decrement'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="comment">// 存放状态（共享属性）</span></span><br><span class="line">state,</span><br><span class="line"><span class="comment">//派生属性</span></span><br><span class="line">getters,</span><br><span class="line"><span class="comment">// 改变 state 状态</span></span><br><span class="line">mutations,</span><br><span class="line">actions</span><br></pre></td></tr></table></figure></li><li>修改 store\index.js, 导入 ./modules/home.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="comment">// 导入 Module</span></span><br><span class="line"><span class="keyword">import</span> home <span class="keyword">from</span> <span class="string">'./modules/home'</span></span><br><span class="line"><span class="comment">// 引入 Vuex 插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123; <span class="comment">// 注意V 和 S都是大写字母</span></span><br><span class="line">modules: &#123;</span><br><span class="line">home <span class="comment">// home: home</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure></li><li>正常访问, 与重构前一样</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vuex-概述&quot;&gt;&lt;a href=&quot;#Vuex-概述&quot; class=&quot;headerlink&quot; title=&quot;Vuex 概述&quot;&gt;&lt;/a&gt;Vuex 概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://vuex.vuejs.org/zh/&quot; ta
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="vuex" scheme="http://yoursite.com/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>msm会员系统----修改密码模块</title>
    <link href="http://yoursite.com/2020/02/08/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F----%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E6%A8%A1%E5%9D%97%20/"/>
    <id>http://yoursite.com/2020/02/08/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F----%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E6%A8%A1%E5%9D%97%20/</id>
    <published>2020-02-07T16:00:00.000Z</published>
    <updated>2020-02-08T11:52:42.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="难点-Element-自定义校验器实现Axios校验密码"><a href="#难点-Element-自定义校验器实现Axios校验密码" class="headerlink" title="难点:Element 自定义校验器实现Axios校验密码"></a>难点:Element 自定义校验器实现Axios校验密码</h1><h2 id="当前用户回显"><a href="#当前用户回显" class="headerlink" title="当前用户回显"></a>当前用户回显</h2><ul><li>在 data 选项添加 user 获取用户信息<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    ......</span><br><span class="line">  <span class="comment">// user 获取用户信息</span></span><br><span class="line">user: <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">'msm-user'</span>)),</span><br></pre></td></tr></table></figure></li><li>在模板相应地方添加代码<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-dropdown-link"</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-user"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">    &#123;&#123;user.name&#125;&#125;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-arrow-down el-icon--right"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure><h2 id="EasyMock-添加模拟接口"><a href="#EasyMock-添加模拟接口" class="headerlink" title="EasyMock 添加模拟接口"></a>EasyMock 添加模拟接口</h2><ul><li>添加原密码校验接口<br>输入原密码，失去焦点后异步发送请求校验是否正确, 给服务接口传入用户id和密码<blockquote><p>请求URL： /user/pwd<br>请求方式： post<br>请求参数 : userId, password<br>描述：校验密码是否正确<br>mock.js 配置：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"code"</span>: <span class="number">2000</span>,</span><br><span class="line"><span class="string">"flag"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"密码正确"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>添加修改密码接口<br>点击提交, 将用户id和新密码提交给后台接口<blockquote><p>请求URL： /user/pwd<br>请求方式： put<br>请求参数 : userId, password<br>描述：修改密码接口<br>mock.js 配置：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"code"</span>: <span class="number">2000</span>,</span><br><span class="line"><span class="string">"flag"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"密码修改成功"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Api-调用接口"><a href="#Api-调用接口" class="headerlink" title="Api 调用接口"></a>Api 调用接口</h2>新建 api\password.js 文件, 调用服务接口实现如下<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验密码，userId,passsword旧密码</span></span><br><span class="line">    checkPwd(userId,passsword)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url:<span class="string">'/user/pwd'</span>,</span><br><span class="line">            method:<span class="string">'post'</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                userId,</span><br><span class="line">                passsword</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//修改密码，userId，password新密码</span></span><br><span class="line">    updatePwd(userId,passsword)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url:<span class="string">'/user/pwd'</span>,</span><br><span class="line">            method:<span class="string">'post'</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                userId,</span><br><span class="line">                passsword</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h2 id="添加模板"><a href="#添加模板" class="headerlink" title="添加模板"></a>添加模板</h2></li></ul></li><li>打开头部组件 , 添加修改密码表单组件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修改密码弹出的部分 ----------------------------------------------------&gt;</span><br><span class="line">    &lt;el-dialog title=<span class="string">"修改密码"</span> :visible.sync=<span class="string">"dialogFormVisible"</span> width=<span class="string">"400px "</span> &gt;</span><br><span class="line">      &lt;el-form :model=<span class="string">"ruleForm"</span> status-icon :rules=<span class="string">"rules"</span> ref=<span class="string">"ruleForm"</span> label-width=<span class="string">"100px"</span> &gt;</span><br><span class="line">        &lt;el-form-item label=<span class="string">"原密码"</span> prop=<span class="string">"oldPass"</span>&gt;</span><br><span class="line">          &lt;el-input type=<span class="string">"password"</span> v-model=<span class="string">"ruleForm.oldPass"</span> autocomplete=<span class="string">"off"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="新密码" prop="newPass" autocomplete="off"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-input v-model.number="ruleForm.newPass"&gt;&lt;/</span>el-input&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="确认密码" prop="checkPass"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-input type="password" v-model="ruleForm.checkPass" autocomplete="off"&gt;&lt;/</span>el-input&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-button type="primary" @click="submitForm('ruleForm')"&gt;提交&lt;/</span>el-button&gt;</span><br><span class="line">          &lt;el-button @click=<span class="string">"resetForm('ruleForm')"</span>&gt;重置&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-form-item&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-dialog&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure></li><li>data 选项中初始化属性值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  data() &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    dialogFormVisible: <span class="literal">false</span>,</span><br><span class="line">    ruleForm: &#123;</span><br><span class="line">      oldPass: <span class="string">""</span>,</span><br><span class="line">      newPass: <span class="string">""</span>,</span><br><span class="line">      checkPass: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    rules: &#123;&#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 handleCommand 方法中调用 handlePwd 抽取了上面 退出系统 逻辑代码为单独模块代码<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">  methods: &#123;</span><br><span class="line">    handleCommand(command) &#123;</span><br><span class="line">      <span class="keyword">switch</span> (command) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"a"</span>:</span><br><span class="line">          <span class="comment">//打开修改密码窗口</span></span><br><span class="line">          <span class="keyword">this</span>.handlePwd();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"b"</span>:</span><br><span class="line">          <span class="comment">//退出系统</span></span><br><span class="line">          <span class="keyword">this</span>.handlelogout();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//退出系统</span></span><br><span class="line">    handlelogout() &#123;</span><br><span class="line">      logout(localStorage.getItem(localStorage.getItem(<span class="string">"msm-token"</span>))).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line">          <span class="keyword">const</span> resp = response.data;</span><br><span class="line">          <span class="keyword">if</span> (resp.flag) &#123;</span><br><span class="line">            <span class="comment">//推出成功</span></span><br><span class="line">            <span class="comment">// 清除本地数据</span></span><br><span class="line">            localStorage.removeItem(<span class="string">"msm-token"</span>);</span><br><span class="line">            localStorage.removeItem(<span class="string">"msm-user"</span>);</span><br><span class="line">            <span class="comment">//回到登录页面</span></span><br><span class="line">            <span class="keyword">this</span>.$router.push(<span class="string">"/login"</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">              message: resp.message,</span><br><span class="line">              type: <span class="string">"warning"</span>,</span><br><span class="line">              duration: <span class="number">500</span> <span class="comment">//弹出停留时间</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">+ 添加 handlePwd 方法, 打开修改密码 窗口</span><br><span class="line">  ~~~js</span><br><span class="line">  <span class="comment">//打开修改密码窗口</span></span><br><span class="line">    handlePwd() &#123;</span><br><span class="line">      <span class="keyword">this</span>.dialogFormVisible = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$refs[<span class="string">"ruleForm"</span>].resetFields();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>表单重置按钮<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button @click=<span class="string">"$refs['ruleForm'].resetFields()"</span>&gt;重置&lt;<span class="regexp">/el-button&gt;</span></span><br></pre></td></tr></table></figure></li><li>添加 submitForm 方法, 提交修改密码表单、<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//提交修改密码</span></span><br><span class="line">  submitForm(formName) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">        <span class="comment">// 验证通过，提交添加</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 验证不通过</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="校验密码"><a href="#校验密码" class="headerlink" title="校验密码"></a>校验密码</h2>输入原密码，失去焦点后异步发送请求校验是否正确, 给服务接口传入用户名和密码</li><li>在 data 选项添加 user 获取用户信息 和 rules 属性中添加 校验规则<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">rules: &#123;</span><br><span class="line">    oldPass: [</span><br><span class="line">      &#123;</span><br><span class="line">        required: <span class="literal">true</span>, <span class="comment">//必须输入</span></span><br><span class="line">        message: <span class="string">"原密码不能为空"</span>, <span class="comment">//下方的弹出信息</span></span><br><span class="line">        trigger: <span class="string">"blur"</span> <span class="comment">//失去焦点时</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">validator</span>: validateOldPass, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    newPass: [</span><br><span class="line">      &#123;</span><br><span class="line">        required: <span class="literal">true</span>, <span class="comment">//必须输入</span></span><br><span class="line">        message: <span class="string">"新密码不能为空"</span>, <span class="comment">//下方的弹出信息</span></span><br><span class="line">        trigger: <span class="string">"blur"</span> <span class="comment">//失去焦点时</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    checkPass: [</span><br><span class="line">      &#123;</span><br><span class="line">        required: <span class="literal">true</span>, <span class="comment">//必须输入</span></span><br><span class="line">        message: <span class="string">"确认新密码不能为空"</span>, <span class="comment">//下方的弹出信息</span></span><br><span class="line">        trigger: <span class="string">"blur"</span> <span class="comment">//失去焦点时</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">validator</span>: validatenewPass, <span class="attr">trigger</span>: <span class="string">"change"</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li>在 data 选项中的 return {} 上面添加自定校验<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//校验原密码</span></span><br><span class="line">  <span class="keyword">const</span> validateOldPass = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// alert(this.user.id)</span></span><br><span class="line">    passwordApi.checkPwd(<span class="keyword">this</span>.user.id, value).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//提示信息</span></span><br><span class="line">      <span class="keyword">const</span> resp = response.data;</span><br><span class="line">      <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        message: resp.message,</span><br><span class="line">        type: resp.flag ? <span class="string">"success"</span> : <span class="string">"warning"</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (resp.flag) &#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(resp.message));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//校验确认密码是否为一致</span></span><br><span class="line">  <span class="keyword">const</span> validatenewPass = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (value != <span class="keyword">this</span>.ruleForm.newPass) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"两次输入密码不一致!"</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  ~</span><br></pre></td></tr></table></figure><h2 id="提交新密码"><a href="#提交新密码" class="headerlink" title="提交新密码"></a>提交新密码</h2></li><li>提交按钮<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-button type=<span class="string">"primary"</span> @click=<span class="string">"submitForm('ruleForm')"</span>&gt;提交&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">~</span></span><br></pre></td></tr></table></figure></li><li>提交修改密码<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//提交修改密码</span></span><br><span class="line">  submitForm(formName) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">        passwordApi</span><br><span class="line">          .updatePwd(<span class="keyword">this</span>.user.id, <span class="keyword">this</span>.ruleForm.checkPass)</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//提示信息</span></span><br><span class="line">            <span class="keyword">const</span> resp = response.data;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">              message: resp.message,</span><br><span class="line">              type: resp.flag ? <span class="string">"success"</span> : <span class="string">"warning"</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (resp.flag) &#123;</span><br><span class="line">              <span class="comment">// 修改成功, 清除本地数据, 重新登录</span></span><br><span class="line">              <span class="keyword">this</span>.handlelogout();</span><br><span class="line">              <span class="comment">// 关闭窗口</span></span><br><span class="line">              <span class="keyword">this</span>.dialogFormVisible = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 验证不通过</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;难点-Element-自定义校验器实现Axios校验密码&quot;&gt;&lt;a href=&quot;#难点-Element-自定义校验器实现Axios校验密码&quot; class=&quot;headerlink&quot; title=&quot;难点:Element 自定义校验器实现Axios校验密码&quot;&gt;&lt;/a&gt;难点
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="ElementUI" scheme="http://yoursite.com/tags/ElementUI/"/>
    
      <category term="Mock.js" scheme="http://yoursite.com/tags/Mock-js/"/>
    
  </entry>
  
  <entry>
    <title>msm会员系统登录----商品管理模块</title>
    <link href="http://yoursite.com/2020/02/07/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F---%E5%95%86%E5%93%81%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2020/02/07/msm/msm%E4%BC%9A%E5%91%98%E7%B3%BB%E7%BB%9F---%E5%95%86%E5%93%81%E6%A8%A1%E5%9D%97/</id>
    <published>2020-02-06T16:00:00.000Z</published>
    <updated>2020-02-07T12:47:07.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要掌握技术点：父子组件通信"><a href="#主要掌握技术点：父子组件通信" class="headerlink" title="主要掌握技术点：父子组件通信"></a>主要掌握技术点：父子组件通信</h1><p>大致流程等同于会员管理和供应商管理模块<br> 不同点:</p><ul><li><p>上方搜索框供应商点击弹出窗口选择供应商而非手动输入搜索模糊查询</p></li><li><p>重点掌握：弹出窗口选择供应商，并回显供应商信息。通过父子组件通信。</p><h1 id="上方搜索框选择供应商模块具体实现流程"><a href="#上方搜索框选择供应商模块具体实现流程" class="headerlink" title="上方搜索框选择供应商模块具体实现流程"></a>上方搜索框选择供应商模块具体实现流程</h1></li><li><p>供应商搜索框设置只读属性</p></li><li><p>将 supplier\index.vue 导入 goods\index.vue 作为子组件使用。</p><ol><li>Supplier 作为子组件</li><li>注册子组件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> goodsApi <span class="keyword">from</span> <span class="string">'@/api/goods'</span></span><br><span class="line"><span class="comment">// Supplier 作为子组件</span></span><br><span class="line"><span class="keyword">import</span> Supplier <span class="keyword">from</span> <span class="string">'@/views/supplier'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="comment">// 不要忘记注册</span></span><br><span class="line">components: &#123; Supplier &#125;,</span><br><span class="line">...</span><br><span class="line">。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>点击弹出的选择供应商窗口</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 供应商对话框 --&gt;</span><br><span class="line">    &lt;el-dialog title=<span class="string">"选择供应商"</span> :visible.sync=<span class="string">"dialogSupplierVisible"</span> width=<span class="string">"500px"</span>&gt;</span><br><span class="line">    &lt;supplier&gt;<span class="xml"><span class="tag">&lt;/<span class="name">supplier</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/el-dialog&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 goods\index.vue 组件的 data 选项中定义 dialogSupplierVisible 控制对话框</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    list: [],</span><br><span class="line">    total: <span class="number">0</span>, <span class="comment">// 总记录数</span></span><br><span class="line">    currentPage: <span class="number">1</span>, <span class="comment">// 当前页, 默认第1页</span></span><br><span class="line">    pageSize: <span class="number">10</span>, <span class="comment">// 每页显示条数， 10条</span></span><br><span class="line">    searchMap: &#123;</span><br><span class="line">        name: <span class="string">""</span>,</span><br><span class="line">        code: <span class="string">""</span>,</span><br><span class="line">        supplierName: <span class="string">""</span></span><br><span class="line">    &#125;, <span class="comment">// 条件查询的绑定字段值</span></span><br><span class="line">    dialogSupplierVisible: <span class="literal">false</span> <span class="comment">// 控制供应商对话框</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>修改供应商输入框</p><ul><li>readonly 只读框</li><li>@click.native 点击事件。<br>注意： el-input 是组件，要在组件元素监听原生事件，需要使用 v-on:原生事件名.native=”处理函数”<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">      readonly</span><br><span class="line">      @click.native= <span class="string">"dialogSupplierVisible = true"</span></span><br><span class="line">      v-model=<span class="string">"searchMap.supplierName"</span></span><br><span class="line">      placeholder=<span class="string">"点击选择供应商"</span></span><br><span class="line">      style=<span class="string">"width: 200px;"</span></span><br><span class="line">    &gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>供应商页面在弹出时候很多是我们不需要的, 进行优化,</p><ul><li>父组件向子组件传递数据：通过 props 声明接收<br>  向供应商 Supplier 子组件传入一个参数 isDialog , 如果是弹出窗口, 则弹出页面隐藏一些功能.</li><li>在 goods\index.vue 上的 <supplier> 组件标签上绑定属性 :isDialog=”true”<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;supplier :isDialog=<span class="string">"true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">supplier</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li>在 supplier\index.vue 中通过 props 选项 声明接收 isDialog<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line"><span class="comment">// 接收父组件传递过来 的数据,通过isDialog来判断 是否为弹框</span></span><br><span class="line"><span class="comment">// 如果为 true, 则是弹框, false 就是列表</span></span><br><span class="line">isDialog: <span class="built_in">Boolean</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>搜索只要 供应商名称 ；列表只要 序号、供应商名称、联系人； 分页只要 向前、向后和页码<br>采用 v-if=“!isDialog” 来隐藏<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item prop=<span class="string">"name"</span>&gt;</span><br><span class="line">    &lt;el-input v-model=<span class="string">"searchMap.name"</span> placeholder=<span class="string">"供应商名称"</span> style=<span class="string">"width: 200px;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">  &lt;el-form-item prop="linkman" v-if="!isDialog"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-input v-model="searchMap.linkman" placeholder="联系人" style="width: 200px;"&gt;&lt;/</span>el-input&gt;</span><br><span class="line">  &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">  &lt;el-form-item prop="phone" v-if="!isDialog"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-input v-model="searchMap.phone" placeholder="联系电话" style="width: 200px;"&gt;&lt;/</span>el-input&gt;</span><br><span class="line">  &lt;<span class="regexp">/el-form-item&gt;</span></span><br></pre></td></tr></table></figure>分页隐藏<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-pagination</span><br><span class="line">  :layout=<span class="string">"!isDialog ? 'total, sizes, prev, pager, next, jumper': 'prev, pager, next,jumper'"</span></span><br><span class="line"></span><br><span class="line">  @size-change=<span class="string">"handleSizeChange"</span></span><br><span class="line">  @current-change=<span class="string">"handleCurrentChange"</span></span><br><span class="line">  :current-page=<span class="string">"currentPage"</span></span><br><span class="line">  :page-sizes=<span class="string">"[10, 20, 50]"</span></span><br><span class="line">  :page-size=<span class="string">"pageSize"</span></span><br><span class="line">  :total=<span class="string">"total"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>当点击列表中某一行供应商，即选中；选中的那个供应商数据传回到父组件 商品管理 中 </p><blockquote><p>参考表格单选：<br><a href="https://element.eleme.cn/#/zh-CN/component/table#dan-xuan" target="_blank" rel="noopener">https://element.eleme.cn/#/zh-CN/component/table#dan-xuan</a><br>在 supplier\index.vue 组件的 el-table 表格组件上配置 highlight-current-row 属性可实现单选；<br>通过 current-change 事件管理选中时触发的事件函数 clickCurrentChange，并传入 currentRow ，<br>oldCurrentRow 参数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- highlight-current-row 激活单选行, isDialog为<span class="literal">true</span>时激活</span><br><span class="line"> @current-change 当点击某一行后,会触发这个事件,从而调用对应的函数clickCurrentChange</span><br><span class="line"> clickCurrentChange函数会接收两个参数:currentRow，oldCurrentRow</span><br><span class="line"> --&gt;</span><br><span class="line"> &lt;el-table</span><br><span class="line"> :highlight-current-row = <span class="string">"isDialog"</span></span><br><span class="line"> @current-change=<span class="string">"clickCurrentChange"</span></span><br><span class="line"> :data=<span class="string">"list"</span></span><br><span class="line"> height=<span class="string">"380"</span></span><br><span class="line"> border</span><br><span class="line"> style=<span class="string">"width: 100%"</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>在 supplier\index.vue 组件定义 clickCurrentChange 函数，向父组件传递点击数据。<br>  子组件向父组件传递数据：通过 $emit 触发事件的方式</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 当点击某一行时,会调用这个函数进行处理</span></span><br><span class="line">clickCurrentChange(currentRow) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(currentRow);</span><br><span class="line"><span class="comment">// 点击后,要将点击的数据传递到父组件(商品管理中),</span></span><br><span class="line"><span class="comment">// 则可以通过触发父组件中的option-supplier, 触发之后 ,</span></span><br><span class="line"><span class="comment">//父组件可以在 option-supplier 这个事件对应的处理函数中进行接收数据currentRow</span></span><br><span class="line"><span class="keyword">this</span>.$emit(<span class="string">"option-supplier"</span>, currentRow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在父组件 goods\index.vue 的组件元素 supplier 上绑定自定义事件 option-supplier</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog title=<span class="string">"选择供应商"</span> :visible.sync=<span class="string">"dialogSupplierVisible"</span> width=<span class="string">"500px"</span>&gt;</span><br><span class="line">     &lt;supplier @option-supplier=<span class="string">"optionSupplier"</span> :isDialog=<span class="string">"true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">supplier</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/el-dialog&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在父组件 goods\index.vue 中添加 option-supplier 事件触发的函数 optionSupplier 进行回显数据</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//供应商回显</span></span><br><span class="line">optionSupplier(currentRow) &#123;</span><br><span class="line">  <span class="comment">// currentRow 子组件传递的数据</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"parent"</span>, currentRow);</span><br><span class="line">  <span class="keyword">this</span>.searchMap.supplierName = currentRow.name; <span class="comment">// 供应商名称</span></span><br><span class="line">  <span class="keyword">this</span>.searchMap.supplierId = currentRow.id; <span class="comment">// 供应商ID</span></span><br><span class="line">  <span class="keyword">this</span>.dialogSupplierVisible = <span class="literal">false</span>; <span class="comment">//关闭窗口</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="重置功能"><a href="#重置功能" class="headerlink" title="重置功能"></a>重置功能</h1><ul><li>在 条件查询区域添加 一个 重置 按钮, 直接在上面调用重置方法, 注意 ‘searchForm’  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button @click=<span class="string">"$refs['searchForm'].resetFields()"</span>&gt;重置&lt;<span class="regexp">/el-button&gt;</span></span><br></pre></td></tr></table></figure></li><li>如果条件输入框有时输入不了内容, 和供应商无法重置, 在 searchMap 对象中明确属性名  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">  list: [],</span><br><span class="line">  total: <span class="number">0</span>, <span class="comment">// 总记录数</span></span><br><span class="line">  currentPage: <span class="number">1</span>, <span class="comment">// 当前页, 默认第1页</span></span><br><span class="line">  pageSize: <span class="number">10</span>, <span class="comment">// 每页显示条数， 10条</span></span><br><span class="line">  searchMap: &#123;</span><br><span class="line">    name: <span class="string">""</span>,</span><br><span class="line">    code: <span class="string">""</span>,</span><br><span class="line">    supplierName: <span class="string">""</span></span><br><span class="line">  &#125;, <span class="comment">// 条件查询的绑定字段值</span></span><br><span class="line">  dialogSupplierVisible: <span class="literal">false</span> <span class="comment">// 控制供应商对话框</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="商品新增功能"><a href="#商品新增功能" class="headerlink" title="商品新增功能"></a>商品新增功能</h1></li><li>在 src\views\goods\index.vue 中分页区域的下方，新增对话框形式表单数据模板  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 新增 or 编辑页面 --&gt;</span><br><span class="line">    &lt;el-dialog title=<span class="string">"商品新增"</span> :visible.sync=<span class="string">"dialogFormVisible"</span> width=<span class="string">"500px"</span>&gt;</span><br><span class="line">    &lt;el-form</span><br><span class="line">        :rules=<span class="string">"rules"</span></span><br><span class="line">        status-icon</span><br><span class="line">        ref=<span class="string">"pojoForm"</span></span><br><span class="line">        :model=<span class="string">"pojo"</span></span><br><span class="line">        label-width=<span class="string">"100px"</span></span><br><span class="line">        label-position=<span class="string">"right"</span></span><br><span class="line">        style=<span class="string">"width: 400px;"</span></span><br><span class="line">    &gt;</span><br><span class="line">        &lt;el-form-item label=<span class="string">"商品名称"</span> prop=<span class="string">"name"</span>&gt;</span><br><span class="line">        &lt;el-input v-model=<span class="string">"pojo.name"</span> /&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="商品编码" prop="code"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="pojo.code" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="商品规格" prop="spec"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="pojo.spec" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="零售价" prop="retailPrice"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="pojo.retailPrice" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="进货价" prop="purchasePrice"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="pojo.purchasePrice" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="库存数量" prop="storageNum"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="pojo.storageNum" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="供应商" prop="supplierId"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input</span></span><br><span class="line"><span class="regexp">            readonly</span></span><br><span class="line"><span class="regexp">            @click.native="dialogSupplierVisible = true"</span></span><br><span class="line"><span class="regexp">            v-model="pojo.supplierName"</span></span><br><span class="line"><span class="regexp">            placeholder="选择供应商"</span></span><br><span class="line"><span class="regexp">            style="width: 200px;"</span></span><br><span class="line"><span class="regexp">        &gt;&lt;/</span>el-input&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-form&gt;</span><br><span class="line">    &lt;div slot=<span class="string">"footer"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog-footer"</span>&gt;</span><br><span class="line">        &lt;el-button @click=<span class="string">"dialogFormVisible = false"</span>&gt;取 消&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button</span></span><br><span class="line"><span class="regexp">        type="primary"</span></span><br><span class="line"><span class="regexp">        @click=" addData('pojoForm')"</span></span><br><span class="line"><span class="regexp">        &gt;确 定&lt;/</span>el-button&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-dialog&gt;</span><br></pre></td></tr></table></figure></li><li>data 选项中声明变量属性:<blockquote><p>pojo 提交表单对象<br>dialogFormVisible 当它为 true 弹出，false 不弹。<br>rules : 定义校验规则</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pojo: &#123;</span><br><span class="line">   id: <span class="literal">null</span>,</span><br><span class="line">   name: <span class="string">""</span>,</span><br><span class="line">   code: <span class="string">""</span>,</span><br><span class="line">   spec: <span class="string">""</span>,</span><br><span class="line">   retailPrice: <span class="number">0.0</span>,</span><br><span class="line">   purchasePrice: <span class="number">0.0</span>,</span><br><span class="line">   storageNum: <span class="number">0</span>,</span><br><span class="line">   supplierName: <span class="string">""</span>,</span><br><span class="line">   supplierId: <span class="literal">null</span></span><br><span class="line"> &#125;,</span><br><span class="line"> dialogFormVisible: <span class="literal">false</span>,</span><br><span class="line"> rules: &#123;</span><br><span class="line">   name: [</span><br><span class="line">     &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"商品名称不能为空"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">   ],</span><br><span class="line">   code: [</span><br><span class="line">     &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"商品编码不能为空"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">   ],</span><br><span class="line">   retailPrice: [</span><br><span class="line">     &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"零售价不能为空"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">   ]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></blockquote></li><li>在 methods 中添加 addData() 函数,提交表单数据用的  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提交新增数据</span></span><br><span class="line">addData(formName) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (valid) &#123;</span><br><span class="line"><span class="comment">// 验证通过，提交添加</span></span><br><span class="line">    alert(<span class="string">'Add submit!'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 验证不通过</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 template 中的查询按钮旁边添加一个 新增 按钮，用于打开新增会员对话框 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">"primary"</span> icon=<span class="string">"el-icon-edit"</span> @click=<span class="string">"handleAdd"</span>&gt;新增&lt;<span class="regexp">/el-button&gt;</span></span><br></pre></td></tr></table></figure></li><li>在 methods 中添加 handleAdd() 函数, 打开新增对话框 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打开新增窗口</span></span><br><span class="line">handleAdd() &#123;</span><br><span class="line">  <span class="keyword">this</span>.dialogFormVisible = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// this.$nextTick()它是一个异步事件，当渲染结束 之后 ，它的回调函数才会被执行</span></span><br><span class="line">    <span class="comment">// 弹出窗口打开之后 ，需要加载Dom, 就需要花费一点时间，我们就应该等待它加载完dom之后，再进行调用resetFields方法，重置表单和清除样式</span></span><br><span class="line">    <span class="keyword">this</span>.$refs[<span class="string">"pojoForm"</span>].resetFields();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>测试发现，点击选择供应商，数据没有回显，实际上是回显到搜索框(searchMap)了，<br>  解决：定义一个中间变量 isEdit: false, 打开时赋值 true, 然后在回显处，判断回显 searchMap还是 pojo<ul><li>修改编辑窗口的供应商名称输入框绑定一个处理函数 editOptionSupplier<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=<span class="string">"供应商名称"</span> prop=<span class="string">"supplierName"</span>&gt;</span><br><span class="line">&lt;el-input readonly</span><br><span class="line">@click.native=<span class="string">"editOptionSupplier"</span></span><br><span class="line">v-model=<span class="string">"pojo.supplierName"</span></span><br><span class="line">placeholder=<span class="string">"选择供应商"</span> style=<span class="string">"width: 200px;"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/el-form-item&gt;</span></span><br></pre></td></tr></table></figure></li><li>data 中声明一个 isEdit: false ， 在 methods 中定义函数 editOptionSupplier ，修改 optionSupplier 函数作判断赋值。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编辑窗口打开供应商</span></span><br><span class="line"> editOptionSupplier() &#123;</span><br><span class="line">   <span class="keyword">this</span>.isEdit = <span class="literal">true</span>; <span class="comment">// 是编辑窗口</span></span><br><span class="line">   <span class="keyword">this</span>.dialogSupplierVisible = <span class="literal">true</span>;</span><br><span class="line"> &#125;,</span><br><span class="line"> optionSupplier(current) &#123;</span><br><span class="line">   <span class="comment">// current 子组件传递的数据</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"goods"</span>, current);</span><br><span class="line">   <span class="comment">// 判断是否编辑</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.isEdit) &#123;</span><br><span class="line">     <span class="keyword">this</span>.pojo.supplierName = current.name; <span class="comment">//供应商名称</span></span><br><span class="line">     <span class="keyword">this</span>.pojo.supplierId = current.id; <span class="comment">// 供应商 id</span></span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="keyword">this</span>.searchMap.supplierName = current.name; <span class="comment">//供应商名称</span></span><br><span class="line">     <span class="keyword">this</span>.searchMap.supplierId = current.id; <span class="comment">// 供应商 id</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">this</span>.isEdit = <span class="literal">false</span>; <span class="comment">// 注意重新赋值 false</span></span><br><span class="line">   <span class="keyword">this</span>.dialogSupplierVisible = <span class="literal">false</span>; <span class="comment">// 关闭窗口</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>表单数据提交<ul><li>EasyMock 添加新增商品模拟接口<blockquote><p>请求URL： /goods<br>请求方式： post<br>描述：新增商品<br>mock.js 配置：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"code"</span>: <span class="number">2000</span>,</span><br><span class="line"><span class="string">"flag"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"新增成功"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Api 调用接口<ol><li>src\api\goods.js 导出的默认对象中，添加调用新增接口的方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 新增</span></span><br><span class="line">add(pojo) &#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/goods'</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        data: pojo</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 src\views\goods\index.vue 中的 addData 方法中提交数据，代码如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 提交新增数据</span></span><br><span class="line">addData(formName) &#123;</span><br><span class="line"><span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="comment">// 验证通过，提交添加</span></span><br><span class="line">    goodsApi.add(<span class="keyword">this</span>.pojo).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> resp = response.data;</span><br><span class="line">        <span class="keyword">if</span> (resp) &#123;</span><br><span class="line">        <span class="keyword">this</span>.fetchData();</span><br><span class="line">        <span class="keyword">this</span>.dialogFormVisible = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 验证不通过</span></span><br><span class="line">        <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">            message: resp.message,</span><br><span class="line">            type: <span class="string">"warning"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="修改和删除参考其他模块"><a href="#修改和删除参考其他模块" class="headerlink" title="修改和删除参考其他模块"></a>修改和删除参考其他模块</h1><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><h2 id="新增-修改实际引用的同一模板，-pojo-id-undefined-值为true是新增，有id说明是更新。（确认按钮点击事件）"><a href="#新增-修改实际引用的同一模板，-pojo-id-undefined-值为true是新增，有id说明是更新。（确认按钮点击事件）" class="headerlink" title="新增+修改实际引用的同一模板， pojo.id === undefined 值为true是新增，有id说明是更新。（确认按钮点击事件）"></a>新增+修改实际引用的同一模板， pojo.id === undefined 值为true是新增，有id说明是更新。（确认按钮点击事件）</h2>前提，pojo 提交表单对象中定义好id：null<br><img src="https://i.loli.net/2020/02/07/hitWYRTBPm93HSL.png" alt="addorupdate.png"></li></ol></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;主要掌握技术点：父子组件通信&quot;&gt;&lt;a href=&quot;#主要掌握技术点：父子组件通信&quot; class=&quot;headerlink&quot; title=&quot;主要掌握技术点：父子组件通信&quot;&gt;&lt;/a&gt;主要掌握技术点：父子组件通信&lt;/h1&gt;&lt;p&gt;大致流程等同于会员管理和供应商管理模块&lt;br
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="项目" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="ElementUI" scheme="http://yoursite.com/tags/ElementUI/"/>
    
      <category term="Mock.js" scheme="http://yoursite.com/tags/Mock-js/"/>
    
  </entry>
  
</feed>
