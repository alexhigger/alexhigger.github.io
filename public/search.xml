<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github上传本地项目到git仓库的步骤</title>
    <url>/2020/01/16/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0github%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<h1 id="Github的操作"><a href="#Github的操作" class="headerlink" title="Github的操作"></a>Github的操作</h1><ul>
<li><p>github新建仓库</p>
</li>
<li><p>创建一个本地文件夹  // 本机已创好—F：/github</p>
</li>
<li><p>进入此文件夹，鼠标右击gitbash选项  </p>
</li>
<li><p>复制创建好仓库后的连接地址，输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;alexhigger&#x2F;xxxxx</span><br></pre></td></tr></table></figure></li>
<li><p>会自动创建本地仓库，在其中添加项目(注意项目中只能有一个.git文件夹)</p>
<blockquote>
<p>$ cd xxxx  &emsp;&emsp;&emsp;&emsp;//进入本地仓库<br>$ git add xxxxx  &emsp;&emsp;&emsp;&emsp; //添加项目<br>$ git commit -m “xxxx”    &emsp;&emsp;&emsp;&emsp;//添加备注<br>$ git push origin master   &emsp;&emsp;&emsp;&emsp; //上传  </p>
</blockquote>
</li>
<li><p>然后就自动上传好了</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>github</tag>
        <tag>流程</tag>
      </tags>
  </entry>
  <entry>
    <title>vue零碎笔记</title>
    <url>/2020/01/14/Vue%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="1、入门helloworld"><a href="#1、入门helloworld" class="headerlink" title="1、入门helloworld"></a>1、入门helloworld</h1><ul>
<li><h2 id="1-1-准备工作："><a href="#1-1-准备工作：" class="headerlink" title="1.1 准备工作："></a>1.1 <strong><em>准备工作</em></strong>：</h2><ul>
<li>在目录下安装vue  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install vue@2.6.10</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="1-2-编写步骤："><a href="#1-2-编写步骤：" class="headerlink" title="1.2 编写步骤："></a>1.2 <strong><em>编写步骤</em></strong>：</h2><blockquote>
<ol>
<li>采用&lt; script&gt;标签引入 vue.js 库</li>
<li>定义一个 <div></li>
<li>new Vue() 实例化Vue应用程序<br>el 选项： 元素element的缩写，指定被 Vue 管理的 &gt;Dom 节点入口（值为选择器 )，必须是一个普通的<br>HTML 标签节点，一般是 div。<br>data 选项：指定初始化数据，在 Vue 所管理的 Dom 节点&gt;下，可通过模板语法来进行使用</li>
<li>标签体显示数据： </li>
<li>表单元素双向数据绑定： v-model</li>
<li>注意： el 的值不能为 html 或 body</li>
</ol>
</blockquote>
</li>
<li><h2 id="1-3-源码实现："><a href="#1-3-源码实现：" class="headerlink" title="1.3 源码实现："></a>1.3 <strong><em>源码实现</em></strong>：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        Hello, &#123;&#123;msg&#125;&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-model进行数据的双向绑定 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"msg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">'#app'</span>,<span class="comment">//指定Vue管理的入口,值为选择器</span></span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                msg:<span class="string">'Vue.js'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><h2 id="1-4常用模板："><a href="#1-4常用模板：" class="headerlink" title="1.4常用模板："></a>1.4<strong><em>常用模板</em></strong>：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">'#app'</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<hr>
<h1 id="2、核心知识点"><a href="#2、核心知识点" class="headerlink" title="2、核心知识点"></a>2、核心知识点</h1><h2 id="2-1模板数据绑定渲染"><a href="#2-1模板数据绑定渲染" class="headerlink" title="2.1模板数据绑定渲染"></a>2.1模板数据绑定渲染</h2><blockquote>
<p>可生成动态的HTML页面，页面中使用嵌入 Vue.js 语法可动态生成</p>
<ol>
<li> 双大括号文本绑定</li>
<li>v-xxxx 以 v- 开头用于标签属性绑定，称为指令</li>
</ol>
</blockquote>
<hr>
<h4 id="2-1-1双大括号语法"><a href="#2-1-1双大括号语法" class="headerlink" title="2.1.1双大括号语法"></a>2.1.1双大括号语法</h4><ul>
<li>格式： </li>
<li>作用：<ul>
<li>使用在标签体中，用于获取数据</li>
<li>可以使用 JavaScript 表达式</li>
</ul>
</li>
<li>案例源码：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        &#123;&#123;JS表达式&#125;&#125;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>1、&#123;&#123;&#125;&#125;双大括号输出文本内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文本内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JS表达式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;score+1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用 v-once 指令能执行一次性地插值，当数据改变时，插值处的内容不会更新。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>2、一次性插值 v-once <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span> 这个将不会改变: &#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">         <span class="keyword">var</span> vm= <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">             el:<span class="string">"#app"</span>,</span></span><br><span class="line">             data:&#123;</span><br><span class="line"><span class="actionscript">                 message:<span class="string">'wzh'</span>,</span></span><br><span class="line">                 score:100</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">     <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="2-1-2一次性插值-v-once"><a href="#2-1-2一次性插值-v-once" class="headerlink" title="2.1.2一次性插值 v-once"></a>2.1.2一次性插值 v-once</h4><ul>
<li>通过使用 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>2、一次性插值 v-once <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span> 这个将不会改变: &#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="2-1-3-输出HTML指令-v-html"><a href="#2-1-3-输出HTML指令-v-html" class="headerlink" title="2.1.3 输出HTML指令 v-html"></a>2.1.3 输出HTML指令 v-html</h4><ul>
<li><p>格式： v-html=’xxxx’</p>
</li>
<li><p>作用：  </p>
<ul>
<li><p>如果是HTML格式数据，双大括号会将数据解释为普通文本，为了输出真正的 HTML，你需要使用 v-html指令。</p>
</li>
<li><p>Vue 为了防止 XSS 攻击，在此指令上做了安全处理，当发现输出内容有 script 标签时，则不渲染</p>
<ul>
<li>XSS 攻击主要利用 JS 脚本注入到网页中，读取 Cookie 值（Cookie一般存储了登录身份信息），读取</li>
<li>到了发送到黑客服务器，从而黑客可以使用你的帐户做非法操作。  XSS 攻击还可以在你进入到支付时，跳转到钓鱼网站。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>3、v-html 指令输出真正的 HTML 内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>双大括号：&#123;&#123; contentHtml &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指令的值不需要使用双大括号获取，直接写获取的属性名 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;p&gt;v-html指令：&lt;span v-html="&#123;&#123;contentHtml&#125;&#125;"&gt;&lt;/span&gt;&lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>v-html指令：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"contentHtml"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'haha'</span>,</span></span><br><span class="line">        number: 1,</span><br><span class="line"><span class="handlebars"><span class="xml">        //contentHtml: '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>红色字体内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span>'</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        contentHtml: '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>红色字体内容&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">"hello vue"</span>)</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>'</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li><p>效果图<br><img src="http://a1.qpic.cn/psc?/V139EQsF0kHTPj/POwAobJtn54NCYlSXd4O2SDweNUlHVWFzC7iAfqe.4.EUqteqY848zgC6eAPbQxsL9sXKmqTIuoKD0hN0Twl*Q!!/c&ek=1&kp=1&pt=0&bo=egKdAAAAAAADF9c!&tl=1&vuin=3146467996&tm=1578927600&sce=60-2-2&rf=newphoto&t=5" alt=""></p>
</li>
</ul>
<hr>
<h4 id="2-1-4元素绑定指令-v-bind"><a href="#2-1-4元素绑定指令-v-bind" class="headerlink" title="2.1.4元素绑定指令 v-bind"></a>2.1.4元素绑定指令 v-bind</h4><ul>
<li>完整格式： v-bind:元素的属性名=’xxxx’</li>
<li>缩写格式： 元素的属性名=’xxxx’</li>
<li>作用：将数据动态绑定到指定的元素上</li>
<li>案例源码：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>4、v-bind 属性绑定指令<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 红色字体是正常的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"imgUrl"</span> <span class="attr">alt</span>=<span class="string">"VueLogo"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgUrl"</span> <span class="attr">alt</span>=<span class="string">"VueLogo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">             imgUrl: <span class="string">'https://cn.vuejs.org/images/logo.png'</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>效果图<br><img src="http://m.qpic.cn/psc?/V139EQsF0kHTPj/I4OEOPrz6D2aFnaB6dwLRaMtjDbXjsQNyH3nYnfydeXJy4Xi5QoMP3IxZuV7tOZuD1yE6UZAE0jQVIxhU4wSxbVQirhv0gC*QzHGpyCqmRc!/b&bo=VwNsAQAAAAADBxs!&rf=viewer_4" alt=""></li>
</ul>
<hr>
<h4 id="2-1-5-事件绑定指令-v-on"><a href="#2-1-5-事件绑定指令-v-on" class="headerlink" title="2.1.5 事件绑定指令 v-on"></a>2.1.5 事件绑定指令 v-on</h4><ul>
<li>完整格式： v-on:事件名称=”事件处理函数名”</li>
<li>缩写格式： @事件名称=”事件处理函数名” 注意： @ 后面没有冒号</li>
<li>作用：用于监听 DOM 事件</li>
<li>案例源码： 每点击1次，数据就加1<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>5、v-on 事件绑定指令<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">v-model</span>=<span class="string">'num'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"add"</span>&gt;</span>点击+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">v-model</span>=<span class="string">'num'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>点击+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">v-model</span>=<span class="string">'num2'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"del"</span>&gt;</span>点击-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                num: 10,</span><br><span class="line">                num2: 100</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            methods: &#123; <span class="comment">//指定事件处理方法, 在模板页面中通过 v-on:事件名 来调用</span></span></span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; <span class="comment">//key为方法名</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'add被调用'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// this 表示当前 vm 实例</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num++ <span class="comment">//每点击1次num加1</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                del:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num2--</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>效果图<br><img src="http://a1.qpic.cn/psc?/V139EQsF0kHTPj/POwAobJtn54NCYlSXd4O2ejBjc.K7XldWyruQwGeWx0Qgqdfd7K53cGPy5j1BMVcf4pn8g9wVcf40JY0Q4CqSw!!/c&ek=1&kp=1&pt=0&bo=tgKaAAAAAAADFxw!&tl=1&vuin=3146467996&tm=1578931200&sce=60-2-2&rf=0-0" alt=""></li>
</ul>
<hr>
<h2 id="2-2计算属性和监听器"><a href="#2-2计算属性和监听器" class="headerlink" title="2.2计算属性和监听器"></a>2.2计算属性和监听器</h2><ul>
<li><h4 id="2-2-1-计算属性-computed"><a href="#2-2-1-计算属性-computed" class="headerlink" title="2.2.1 计算属性 computed"></a>2.2.1 计算属性 computed</h4><ul>
<li>computed 选项定义计算属性</li>
<li>计算属性 类似于 methods 选项中定义的函数<ul>
<li>计算属性 会进行缓存，只在相关响应式依赖发生改变时它们才会重新求值。</li>
<li>函数 每次都会执行函数体进行计算。</li>
</ul>
</li>
</ul>
</li>
<li><h4 id="2-2-2-计算属性（双向绑定）"><a href="#2-2-2-计算属性（双向绑定）" class="headerlink" title="2.2.2 计算属性（双向绑定）"></a>2.2.2 计算属性（双向绑定）</h4><ul>
<li>计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter</li>
</ul>
</li>
<li><h4 id="2-2-3监听器-watch"><a href="#2-2-3监听器-watch" class="headerlink" title="2.2.3监听器 watch"></a>2.2.3监听器 watch</h4><ul>
<li>当属性数据发生变化时,对应属性的回调函数会自动调用, 在函数内部进行计算</li>
<li>通过 watch 选项 或者 vm 实例的 $watch() 来监听指定的属性</li>
</ul>
</li>
<li><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><ul>
<li><ol>
<li>通过 watch 选项 监听数学分数， 当数学更新后回调函数中重新计算总分 + sumScore3</li>
</ol>
</li>
<li><ol start="2">
<li>通过 vm.$watch() 选项 监听英语分数， 当英语更新后回调函数中重新算总分    + sumScore3</li>
</ol>
</li>
<li>源码实现：<br>注意: 在data 选择中添加一个 sumScore3 属性</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        数学：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"mathScore"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        英语：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"englishScore"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        总分(方法-单向)：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"sumScore()"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        总分(计算属性-单向)：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"sumScore1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        总分(计算属性-双向)：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"sumScore2"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        总分(监听器)：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"sumScore3"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./node_modules/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                mathScore: 80,</span><br><span class="line">                englishScore: 90,</span><br><span class="line">                sumScore3: 170</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            methods: &#123; <span class="comment">//不要少了s</span></span></span><br><span class="line"><span class="actionscript">                sumScore: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//在控制台输入 vm.sumScore() 每次都会被调用</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'sumScore被调用'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// `this` 指向当前 vm 实例， 减 0 是为了字符串转为数字运算</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> (<span class="keyword">this</span>.mathScore - <span class="number">0</span>) + (<span class="keyword">this</span>.englishScore - <span class="number">0</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">// 计算属性</span></span></span><br><span class="line">            computed: &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 默认 getter 只支持单向绑定</span></span></span><br><span class="line"><span class="actionscript">                sumScore1: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//在控制台输入 vm.sumScore1 不会被重新调用 ,说明计算属性有缓存</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'sumScore1被调用'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> (<span class="keyword">this</span>.mathScore - <span class="number">0</span>) + (<span class="keyword">this</span>.englishScore - <span class="number">0</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//指定 getter/setter 双向绑定</span></span></span><br><span class="line">                sumScore2: &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'sumScore2被调用'</span>)</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> (<span class="keyword">this</span>.mathScore - <span class="number">0</span>) + (<span class="keyword">this</span>.englishScore - <span class="number">0</span>)</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="actionscript">                    <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> <span class="params">(newValue)</span> </span>&#123;<span class="comment">//value为更新后的值</span></span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 被调用则更新了sumScore2，然后将数学和英语更新为平均分</span></span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">var</span> avgScore = newValue / <span class="number">2</span></span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">this</span>.mathScore = avgScore</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">this</span>.englishScore = avgScore</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//监听器方式1：watch选项</span></span></span><br><span class="line">            watch: &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">//当数学修改后，更新总分sumScore3</span></span></span><br><span class="line"><span class="actionscript">                mathScore: <span class="function"><span class="keyword">function</span> <span class="params">(newValue, oldValue)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//newValue 就是新输入的数学得分</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.sumScore3 = (newValue - <span class="number">0</span>) + (<span class="keyword">this</span>.englishScore - <span class="number">0</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="comment">//监听器方式2：通过vm对象调用</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//第1个参数为监听的属性名，第2个回调函数</span></span></span><br><span class="line"><span class="actionscript">        vm.$watch(<span class="string">'englishScore'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(newValue)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//newValue 就是新输入的英语得分</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.sumScore3 = (newValue - <span class="number">0</span>) + (<span class="keyword">this</span>.mathScore - <span class="number">0</span>)</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>






]]></content>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot--异步传输与定时任务</title>
    <url>/2020/01/11/springboot%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="异步传输"><a href="#异步传输" class="headerlink" title="异步传输"></a>异步传输</h2><blockquote>
<p>在项目开发中，绝大多数情况下都是通过同步方式处理业务逻辑的，但是比如批量处理数据，批量发送邮<br>件，批量发送短信等操作 容易造成阻塞的情况，之前大部分都是使用多线程来完成此类任务。<br>而在Spring 3+之后，就已经内置了 @Async 注解来完美解决这个问题，从而提高效率。<br>使用的注解：</p>
<ul>
<li><strong><em>@EnableAysnc</em></strong> 启动类上开启基于注解的异步任务</li>
<li><strong><em>@Aysnc</em></strong> 标识的方法会异步执行</li>
</ul>
</blockquote>
<hr>
<h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><blockquote>
<p>在项目开发中，经常需要执行一些定时任务，比如 每月1号凌晨需要汇总上个月的数据分析报表; 每天凌晨分<br>析前一天的日志信息等定时操作。Spring 为我们提供了异步执行定时任务调度的方式。<br>使用的注解：</p>
<ul>
<li><strong><em>@EnableScheduling</em></strong> 启动类上开启基于注解的定时任务</li>
<li><strong><em>@Scheduled</em></strong> 标识的方法会进行定时处理<br>需要通过 <strong>cron</strong> 属性来指定 cron 表达式： 秒 分 时 日 月 星期几</li>
</ul>
<blockquote>
<p>在线生成cron表达式 <a href="http://cron.qqe2.com/" target="_blank" rel="noopener">http://cron.qqe2.com/</a><br>例如</p>
<figure class="highlight plain"><figcaption><span>* * * * 1到5秒，每秒都触发任务</span></figcaption><table><tr><td class="code"><pre><span class="line">*&#x2F;5 * * * * 每隔5秒执行一次</span><br><span class="line">0 *&#x2F;1 * * * 每隔1分钟执行一次</span><br><span class="line">0 0 5-15 * * 每天5-15点整点触发</span><br><span class="line">0 0-5 14 * * 在每天下午2点到下午2:05期间的每1分钟触发</span><br><span class="line">0 0&#x2F;5 14 * * 在每天下午2点到下午2:55期间的每5分钟触发</span><br><span class="line">0 0&#x2F;5 14,18 * * 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发</span><br><span class="line">0 0&#x2F;30 9-17 * * 朝九晚五工作时间内每半小时</span><br><span class="line">0 0 12 ? * WED 表示每个星期三中午12点</span><br><span class="line">0 10,44 14 ? 3 WED 每年三月的星期三的下午2:10和2:44触发</span><br><span class="line">0 0 23 L * ? 每月最后一天23点执行一次</span><br><span class="line">0 15 10 LW * ? 每个月最后一个工作日的10点15分0秒触发任务</span><br><span class="line">0 15 10 ? * 5#3 每个月第三周的星期五的10点15分0秒触发任务</span><br></pre></td></tr></table></figure></blockquote>
</blockquote>
]]></content>
      <tags>
        <tag>springboot</tag>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/2019/12/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>内容</p>
<hr>
<h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容</p>
<hr>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
